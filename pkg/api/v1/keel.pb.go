// Code generated by protoc-gen-go. DO NOT EDIT.
// source: keel.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilterOp int32

const (
	FilterOp_OP_EQUALS      FilterOp = 0
	FilterOp_OP_STARTS_WITH FilterOp = 1
	FilterOp_OP_ENDS_WITH   FilterOp = 2
	FilterOp_OP_CONTAINS    FilterOp = 3
	FilterOp_OP_EXISTS      FilterOp = 4
)

var FilterOp_name = map[int32]string{
	0: "OP_EQUALS",
	1: "OP_STARTS_WITH",
	2: "OP_ENDS_WITH",
	3: "OP_CONTAINS",
	4: "OP_EXISTS",
}

var FilterOp_value = map[string]int32{
	"OP_EQUALS":      0,
	"OP_STARTS_WITH": 1,
	"OP_ENDS_WITH":   2,
	"OP_CONTAINS":    3,
	"OP_EXISTS":      4,
}

func (x FilterOp) String() string {
	return proto.EnumName(FilterOp_name, int32(x))
}

func (FilterOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{0}
}

type JobTrigger int32

const (
	JobTrigger_TRIGGER_UNKNOWN JobTrigger = 0
	JobTrigger_TRIGGER_PUSH    JobTrigger = 1
	JobTrigger_TRIGGER_MANUAL  JobTrigger = 2
)

var JobTrigger_name = map[int32]string{
	0: "TRIGGER_UNKNOWN",
	1: "TRIGGER_PUSH",
	2: "TRIGGER_MANUAL",
}

var JobTrigger_value = map[string]int32{
	"TRIGGER_UNKNOWN": 0,
	"TRIGGER_PUSH":    1,
	"TRIGGER_MANUAL":  2,
}

func (x JobTrigger) String() string {
	return proto.EnumName(JobTrigger_name, int32(x))
}

func (JobTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{1}
}

type JobPhase int32

const (
	// Unknown means we don't know what state the job is in
	JobPhase_PHASE_UNKNOWN JobPhase = 0
	// Preparing means the job hasn't started yet and isn't consuming resources in the system
	JobPhase_PHASE_PREPARING JobPhase = 1
	// Starting means the job has been scheduled and is waiting to run. Things that might prevent it
	// from running already are pod scheduling, image pull or container startup.
	JobPhase_PHASE_STARTING JobPhase = 2
	// Running means the job is actually running and doing work.
	JobPhase_PHASE_RUNNING JobPhase = 3
	// Done means the job has run and is finished
	JobPhase_PHASE_DONE JobPhase = 4
	// Cleaning means the job is in post-run cleanup
	JobPhase_PHASE_CLEANUP JobPhase = 5
)

var JobPhase_name = map[int32]string{
	0: "PHASE_UNKNOWN",
	1: "PHASE_PREPARING",
	2: "PHASE_STARTING",
	3: "PHASE_RUNNING",
	4: "PHASE_DONE",
	5: "PHASE_CLEANUP",
}

var JobPhase_value = map[string]int32{
	"PHASE_UNKNOWN":   0,
	"PHASE_PREPARING": 1,
	"PHASE_STARTING":  2,
	"PHASE_RUNNING":   3,
	"PHASE_DONE":      4,
	"PHASE_CLEANUP":   5,
}

func (x JobPhase) String() string {
	return proto.EnumName(JobPhase_name, int32(x))
}

func (JobPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{2}
}

type LogSlicePhase int32

const (
	LogSlicePhase_SLICE_ABANDONED  LogSlicePhase = 0
	LogSlicePhase_SLICE_CHECKPOINT LogSlicePhase = 1
	LogSlicePhase_SLICE_START      LogSlicePhase = 2
	LogSlicePhase_SLICE_CONTENT    LogSlicePhase = 3
	LogSlicePhase_SLICE_END        LogSlicePhase = 4
)

var LogSlicePhase_name = map[int32]string{
	0: "SLICE_ABANDONED",
	1: "SLICE_CHECKPOINT",
	2: "SLICE_START",
	3: "SLICE_CONTENT",
	4: "SLICE_END",
}

var LogSlicePhase_value = map[string]int32{
	"SLICE_ABANDONED":  0,
	"SLICE_CHECKPOINT": 1,
	"SLICE_START":      2,
	"SLICE_CONTENT":    3,
	"SLICE_END":        4,
}

func (x LogSlicePhase) String() string {
	return proto.EnumName(LogSlicePhase_name, int32(x))
}

func (LogSlicePhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{3}
}

type StartLocalJobRequest struct {
	// Types that are valid to be assigned to Content:
	//	*StartLocalJobRequest_Metadata
	//	*StartLocalJobRequest_ConfigYaml
	//	*StartLocalJobRequest_JobYaml
	//	*StartLocalJobRequest_WorkspaceTar
	//	*StartLocalJobRequest_WorkspaceTarDone
	Content              isStartLocalJobRequest_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StartLocalJobRequest) Reset()         { *m = StartLocalJobRequest{} }
func (m *StartLocalJobRequest) String() string { return proto.CompactTextString(m) }
func (*StartLocalJobRequest) ProtoMessage()    {}
func (*StartLocalJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{0}
}

func (m *StartLocalJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartLocalJobRequest.Unmarshal(m, b)
}
func (m *StartLocalJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartLocalJobRequest.Marshal(b, m, deterministic)
}
func (m *StartLocalJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartLocalJobRequest.Merge(m, src)
}
func (m *StartLocalJobRequest) XXX_Size() int {
	return xxx_messageInfo_StartLocalJobRequest.Size(m)
}
func (m *StartLocalJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartLocalJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartLocalJobRequest proto.InternalMessageInfo

type isStartLocalJobRequest_Content interface {
	isStartLocalJobRequest_Content()
}

type StartLocalJobRequest_Metadata struct {
	Metadata *JobMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type StartLocalJobRequest_ConfigYaml struct {
	ConfigYaml []byte `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3,oneof"`
}

type StartLocalJobRequest_JobYaml struct {
	JobYaml []byte `protobuf:"bytes,3,opt,name=job_yaml,json=jobYaml,proto3,oneof"`
}

type StartLocalJobRequest_WorkspaceTar struct {
	WorkspaceTar []byte `protobuf:"bytes,4,opt,name=workspace_tar,json=workspaceTar,proto3,oneof"`
}

type StartLocalJobRequest_WorkspaceTarDone struct {
	WorkspaceTarDone bool `protobuf:"varint,5,opt,name=workspace_tar_done,json=workspaceTarDone,proto3,oneof"`
}

func (*StartLocalJobRequest_Metadata) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_ConfigYaml) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_JobYaml) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_WorkspaceTar) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_WorkspaceTarDone) isStartLocalJobRequest_Content() {}

func (m *StartLocalJobRequest) GetContent() isStartLocalJobRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *StartLocalJobRequest) GetMetadata() *JobMetadata {
	if x, ok := m.GetContent().(*StartLocalJobRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *StartLocalJobRequest) GetConfigYaml() []byte {
	if x, ok := m.GetContent().(*StartLocalJobRequest_ConfigYaml); ok {
		return x.ConfigYaml
	}
	return nil
}

func (m *StartLocalJobRequest) GetJobYaml() []byte {
	if x, ok := m.GetContent().(*StartLocalJobRequest_JobYaml); ok {
		return x.JobYaml
	}
	return nil
}

func (m *StartLocalJobRequest) GetWorkspaceTar() []byte {
	if x, ok := m.GetContent().(*StartLocalJobRequest_WorkspaceTar); ok {
		return x.WorkspaceTar
	}
	return nil
}

func (m *StartLocalJobRequest) GetWorkspaceTarDone() bool {
	if x, ok := m.GetContent().(*StartLocalJobRequest_WorkspaceTarDone); ok {
		return x.WorkspaceTarDone
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StartLocalJobRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StartLocalJobRequest_Metadata)(nil),
		(*StartLocalJobRequest_ConfigYaml)(nil),
		(*StartLocalJobRequest_JobYaml)(nil),
		(*StartLocalJobRequest_WorkspaceTar)(nil),
		(*StartLocalJobRequest_WorkspaceTarDone)(nil),
	}
}

type StartJobResponse struct {
	Status               *JobStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StartJobResponse) Reset()         { *m = StartJobResponse{} }
func (m *StartJobResponse) String() string { return proto.CompactTextString(m) }
func (*StartJobResponse) ProtoMessage()    {}
func (*StartJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{1}
}

func (m *StartJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobResponse.Unmarshal(m, b)
}
func (m *StartJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobResponse.Marshal(b, m, deterministic)
}
func (m *StartJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobResponse.Merge(m, src)
}
func (m *StartJobResponse) XXX_Size() int {
	return xxx_messageInfo_StartJobResponse.Size(m)
}
func (m *StartJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobResponse proto.InternalMessageInfo

func (m *StartJobResponse) GetStatus() *JobStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListJobsRequest struct {
	Filter               []*FilterExpression `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	Order                []*OrderExpression  `protobuf:"bytes,2,rep,name=order,proto3" json:"order,omitempty"`
	Start                int32               `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit                int32               `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListJobsRequest) Reset()         { *m = ListJobsRequest{} }
func (m *ListJobsRequest) String() string { return proto.CompactTextString(m) }
func (*ListJobsRequest) ProtoMessage()    {}
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{2}
}

func (m *ListJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsRequest.Unmarshal(m, b)
}
func (m *ListJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsRequest.Marshal(b, m, deterministic)
}
func (m *ListJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsRequest.Merge(m, src)
}
func (m *ListJobsRequest) XXX_Size() int {
	return xxx_messageInfo_ListJobsRequest.Size(m)
}
func (m *ListJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsRequest proto.InternalMessageInfo

func (m *ListJobsRequest) GetFilter() []*FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListJobsRequest) GetOrder() []*OrderExpression {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *ListJobsRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ListJobsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FilterExpression struct {
	Terms                []*FilterTerm `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FilterExpression) Reset()         { *m = FilterExpression{} }
func (m *FilterExpression) String() string { return proto.CompactTextString(m) }
func (*FilterExpression) ProtoMessage()    {}
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{3}
}

func (m *FilterExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterExpression.Unmarshal(m, b)
}
func (m *FilterExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterExpression.Marshal(b, m, deterministic)
}
func (m *FilterExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterExpression.Merge(m, src)
}
func (m *FilterExpression) XXX_Size() int {
	return xxx_messageInfo_FilterExpression.Size(m)
}
func (m *FilterExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterExpression.DiscardUnknown(m)
}

var xxx_messageInfo_FilterExpression proto.InternalMessageInfo

func (m *FilterExpression) GetTerms() []*FilterTerm {
	if m != nil {
		return m.Terms
	}
	return nil
}

type FilterTerm struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operation            FilterOp `protobuf:"varint,3,opt,name=operation,proto3,enum=v1.FilterOp" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterTerm) Reset()         { *m = FilterTerm{} }
func (m *FilterTerm) String() string { return proto.CompactTextString(m) }
func (*FilterTerm) ProtoMessage()    {}
func (*FilterTerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{4}
}

func (m *FilterTerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterTerm.Unmarshal(m, b)
}
func (m *FilterTerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterTerm.Marshal(b, m, deterministic)
}
func (m *FilterTerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterTerm.Merge(m, src)
}
func (m *FilterTerm) XXX_Size() int {
	return xxx_messageInfo_FilterTerm.Size(m)
}
func (m *FilterTerm) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterTerm.DiscardUnknown(m)
}

var xxx_messageInfo_FilterTerm proto.InternalMessageInfo

func (m *FilterTerm) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *FilterTerm) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *FilterTerm) GetOperation() FilterOp {
	if m != nil {
		return m.Operation
	}
	return FilterOp_OP_EQUALS
}

type OrderExpression struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Ascending            bool     `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderExpression) Reset()         { *m = OrderExpression{} }
func (m *OrderExpression) String() string { return proto.CompactTextString(m) }
func (*OrderExpression) ProtoMessage()    {}
func (*OrderExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{5}
}

func (m *OrderExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderExpression.Unmarshal(m, b)
}
func (m *OrderExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderExpression.Marshal(b, m, deterministic)
}
func (m *OrderExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderExpression.Merge(m, src)
}
func (m *OrderExpression) XXX_Size() int {
	return xxx_messageInfo_OrderExpression.Size(m)
}
func (m *OrderExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderExpression.DiscardUnknown(m)
}

var xxx_messageInfo_OrderExpression proto.InternalMessageInfo

func (m *OrderExpression) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *OrderExpression) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type ListJobsResponse struct {
	Total                int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Result               []*JobStatus `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListJobsResponse) Reset()         { *m = ListJobsResponse{} }
func (m *ListJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobsResponse) ProtoMessage()    {}
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{6}
}

func (m *ListJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsResponse.Unmarshal(m, b)
}
func (m *ListJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsResponse.Marshal(b, m, deterministic)
}
func (m *ListJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsResponse.Merge(m, src)
}
func (m *ListJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobsResponse.Size(m)
}
func (m *ListJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsResponse proto.InternalMessageInfo

func (m *ListJobsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListJobsResponse) GetResult() []*JobStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type SubscribeRequest struct {
	Filter               []*FilterExpression `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{7}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetFilter() []*FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

type SubscribeResponse struct {
	Result               *JobStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{8}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetResult() *JobStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetJobRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{9}
}

func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (m *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(m, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetJobResponse struct {
	Result               *JobStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetJobResponse) Reset()         { *m = GetJobResponse{} }
func (m *GetJobResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobResponse) ProtoMessage()    {}
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{10}
}

func (m *GetJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobResponse.Unmarshal(m, b)
}
func (m *GetJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobResponse.Marshal(b, m, deterministic)
}
func (m *GetJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobResponse.Merge(m, src)
}
func (m *GetJobResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobResponse.Size(m)
}
func (m *GetJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobResponse proto.InternalMessageInfo

func (m *GetJobResponse) GetResult() *JobStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type ListenRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Updates              bool     `protobuf:"varint,2,opt,name=updates,proto3" json:"updates,omitempty"`
	Logs                 bool     `protobuf:"varint,3,opt,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{11}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListenRequest) GetUpdates() bool {
	if m != nil {
		return m.Updates
	}
	return false
}

func (m *ListenRequest) GetLogs() bool {
	if m != nil {
		return m.Logs
	}
	return false
}

type ListenResponse struct {
	// Types that are valid to be assigned to Content:
	//	*ListenResponse_Update
	//	*ListenResponse_Slice
	Content              isListenResponse_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListenResponse) Reset()         { *m = ListenResponse{} }
func (m *ListenResponse) String() string { return proto.CompactTextString(m) }
func (*ListenResponse) ProtoMessage()    {}
func (*ListenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{12}
}

func (m *ListenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenResponse.Unmarshal(m, b)
}
func (m *ListenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenResponse.Marshal(b, m, deterministic)
}
func (m *ListenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenResponse.Merge(m, src)
}
func (m *ListenResponse) XXX_Size() int {
	return xxx_messageInfo_ListenResponse.Size(m)
}
func (m *ListenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListenResponse proto.InternalMessageInfo

type isListenResponse_Content interface {
	isListenResponse_Content()
}

type ListenResponse_Update struct {
	Update *JobStatus `protobuf:"bytes,1,opt,name=update,proto3,oneof"`
}

type ListenResponse_Slice struct {
	Slice *LogSliceEvent `protobuf:"bytes,2,opt,name=slice,proto3,oneof"`
}

func (*ListenResponse_Update) isListenResponse_Content() {}

func (*ListenResponse_Slice) isListenResponse_Content() {}

func (m *ListenResponse) GetContent() isListenResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ListenResponse) GetUpdate() *JobStatus {
	if x, ok := m.GetContent().(*ListenResponse_Update); ok {
		return x.Update
	}
	return nil
}

func (m *ListenResponse) GetSlice() *LogSliceEvent {
	if x, ok := m.GetContent().(*ListenResponse_Slice); ok {
		return x.Slice
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListenResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListenResponse_Update)(nil),
		(*ListenResponse_Slice)(nil),
	}
}

type JobStatus struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Metadata             *JobMetadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Phase                JobPhase       `protobuf:"varint,3,opt,name=phase,proto3,enum=v1.JobPhase" json:"phase,omitempty"`
	Conditions           *JobConditions `protobuf:"bytes,4,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Details              string         `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JobStatus) Reset()         { *m = JobStatus{} }
func (m *JobStatus) String() string { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()    {}
func (*JobStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{13}
}

func (m *JobStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatus.Unmarshal(m, b)
}
func (m *JobStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatus.Marshal(b, m, deterministic)
}
func (m *JobStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatus.Merge(m, src)
}
func (m *JobStatus) XXX_Size() int {
	return xxx_messageInfo_JobStatus.Size(m)
}
func (m *JobStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatus proto.InternalMessageInfo

func (m *JobStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobStatus) GetMetadata() *JobMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *JobStatus) GetPhase() JobPhase {
	if m != nil {
		return m.Phase
	}
	return JobPhase_PHASE_UNKNOWN
}

func (m *JobStatus) GetConditions() *JobConditions {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *JobStatus) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type JobMetadata struct {
	Owner                string               `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repository           *Repository          `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Trigger              JobTrigger           `protobuf:"varint,3,opt,name=trigger,proto3,enum=v1.JobTrigger" json:"trigger,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Finished             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finished,proto3" json:"finished,omitempty"`
	Annotations          []*Annotation        `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JobMetadata) Reset()         { *m = JobMetadata{} }
func (m *JobMetadata) String() string { return proto.CompactTextString(m) }
func (*JobMetadata) ProtoMessage()    {}
func (*JobMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{14}
}

func (m *JobMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMetadata.Unmarshal(m, b)
}
func (m *JobMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMetadata.Marshal(b, m, deterministic)
}
func (m *JobMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMetadata.Merge(m, src)
}
func (m *JobMetadata) XXX_Size() int {
	return xxx_messageInfo_JobMetadata.Size(m)
}
func (m *JobMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_JobMetadata proto.InternalMessageInfo

func (m *JobMetadata) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *JobMetadata) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *JobMetadata) GetTrigger() JobTrigger {
	if m != nil {
		return m.Trigger
	}
	return JobTrigger_TRIGGER_UNKNOWN
}

func (m *JobMetadata) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *JobMetadata) GetFinished() *timestamp.Timestamp {
	if m != nil {
		return m.Finished
	}
	return nil
}

func (m *JobMetadata) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type Repository struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string   `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Ref                  string   `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{15}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Repository) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Repository) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Repository) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type Annotation struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Annotation) Reset()         { *m = Annotation{} }
func (m *Annotation) String() string { return proto.CompactTextString(m) }
func (*Annotation) ProtoMessage()    {}
func (*Annotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{16}
}

func (m *Annotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotation.Unmarshal(m, b)
}
func (m *Annotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotation.Marshal(b, m, deterministic)
}
func (m *Annotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotation.Merge(m, src)
}
func (m *Annotation) XXX_Size() int {
	return xxx_messageInfo_Annotation.Size(m)
}
func (m *Annotation) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotation.DiscardUnknown(m)
}

var xxx_messageInfo_Annotation proto.InternalMessageInfo

func (m *Annotation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Annotation) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type JobConditions struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FailureCount         int32    `protobuf:"varint,2,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobConditions) Reset()         { *m = JobConditions{} }
func (m *JobConditions) String() string { return proto.CompactTextString(m) }
func (*JobConditions) ProtoMessage()    {}
func (*JobConditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{17}
}

func (m *JobConditions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobConditions.Unmarshal(m, b)
}
func (m *JobConditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobConditions.Marshal(b, m, deterministic)
}
func (m *JobConditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobConditions.Merge(m, src)
}
func (m *JobConditions) XXX_Size() int {
	return xxx_messageInfo_JobConditions.Size(m)
}
func (m *JobConditions) XXX_DiscardUnknown() {
	xxx_messageInfo_JobConditions.DiscardUnknown(m)
}

var xxx_messageInfo_JobConditions proto.InternalMessageInfo

func (m *JobConditions) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *JobConditions) GetFailureCount() int32 {
	if m != nil {
		return m.FailureCount
	}
	return 0
}

type LogSliceEvent struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phase                LogSlicePhase `protobuf:"varint,2,opt,name=phase,proto3,enum=v1.LogSlicePhase" json:"phase,omitempty"`
	Payload              string        `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LogSliceEvent) Reset()         { *m = LogSliceEvent{} }
func (m *LogSliceEvent) String() string { return proto.CompactTextString(m) }
func (*LogSliceEvent) ProtoMessage()    {}
func (*LogSliceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc1f325416a5753, []int{18}
}

func (m *LogSliceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogSliceEvent.Unmarshal(m, b)
}
func (m *LogSliceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogSliceEvent.Marshal(b, m, deterministic)
}
func (m *LogSliceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogSliceEvent.Merge(m, src)
}
func (m *LogSliceEvent) XXX_Size() int {
	return xxx_messageInfo_LogSliceEvent.Size(m)
}
func (m *LogSliceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_LogSliceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_LogSliceEvent proto.InternalMessageInfo

func (m *LogSliceEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogSliceEvent) GetPhase() LogSlicePhase {
	if m != nil {
		return m.Phase
	}
	return LogSlicePhase_SLICE_ABANDONED
}

func (m *LogSliceEvent) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterEnum("v1.FilterOp", FilterOp_name, FilterOp_value)
	proto.RegisterEnum("v1.JobTrigger", JobTrigger_name, JobTrigger_value)
	proto.RegisterEnum("v1.JobPhase", JobPhase_name, JobPhase_value)
	proto.RegisterEnum("v1.LogSlicePhase", LogSlicePhase_name, LogSlicePhase_value)
	proto.RegisterType((*StartLocalJobRequest)(nil), "v1.StartLocalJobRequest")
	proto.RegisterType((*StartJobResponse)(nil), "v1.StartJobResponse")
	proto.RegisterType((*ListJobsRequest)(nil), "v1.ListJobsRequest")
	proto.RegisterType((*FilterExpression)(nil), "v1.FilterExpression")
	proto.RegisterType((*FilterTerm)(nil), "v1.FilterTerm")
	proto.RegisterType((*OrderExpression)(nil), "v1.OrderExpression")
	proto.RegisterType((*ListJobsResponse)(nil), "v1.ListJobsResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "v1.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "v1.SubscribeResponse")
	proto.RegisterType((*GetJobRequest)(nil), "v1.GetJobRequest")
	proto.RegisterType((*GetJobResponse)(nil), "v1.GetJobResponse")
	proto.RegisterType((*ListenRequest)(nil), "v1.ListenRequest")
	proto.RegisterType((*ListenResponse)(nil), "v1.ListenResponse")
	proto.RegisterType((*JobStatus)(nil), "v1.JobStatus")
	proto.RegisterType((*JobMetadata)(nil), "v1.JobMetadata")
	proto.RegisterType((*Repository)(nil), "v1.Repository")
	proto.RegisterType((*Annotation)(nil), "v1.Annotation")
	proto.RegisterType((*JobConditions)(nil), "v1.JobConditions")
	proto.RegisterType((*LogSliceEvent)(nil), "v1.LogSliceEvent")
}

func init() { proto.RegisterFile("keel.proto", fileDescriptor_cfc1f325416a5753) }

var fileDescriptor_cfc1f325416a5753 = []byte{
	// 1250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0x1a, 0x47,
	0x14, 0x06, 0x6c, 0x30, 0x1c, 0x0c, 0x6c, 0xc6, 0xae, 0x84, 0xdc, 0x4a, 0x75, 0x37, 0x8d, 0xe2,
	0xba, 0x2d, 0x89, 0x9d, 0xa8, 0x69, 0xab, 0x5e, 0x94, 0x60, 0x6a, 0x70, 0xc8, 0x42, 0x66, 0xd7,
	0x4a, 0x2b, 0x55, 0x42, 0x03, 0x0c, 0x64, 0xe3, 0x65, 0x87, 0xee, 0x0c, 0x4e, 0x2d, 0xf5, 0x39,
	0x7a, 0xd7, 0x87, 0xe8, 0x03, 0xf4, 0x79, 0xfa, 0x1a, 0xd5, 0xfc, 0x2c, 0xbb, 0x20, 0x1a, 0xa9,
	0xbd, 0xdb, 0xf9, 0xce, 0x37, 0xe7, 0x7f, 0xce, 0x59, 0x80, 0x1b, 0x4a, 0x83, 0xc6, 0x22, 0x62,
	0x82, 0xa1, 0xdc, 0xed, 0xd9, 0xd1, 0xc7, 0x33, 0xc6, 0x66, 0x01, 0x7d, 0xa4, 0x90, 0xd1, 0x72,
	0xfa, 0x48, 0xf8, 0x73, 0xca, 0x05, 0x99, 0x2f, 0x34, 0xc9, 0xfe, 0x3b, 0x0b, 0x87, 0xae, 0x20,
	0x91, 0xe8, 0xb1, 0x31, 0x09, 0xae, 0xd8, 0x08, 0xd3, 0x5f, 0x96, 0x94, 0x0b, 0xf4, 0x25, 0x14,
	0xe7, 0x54, 0x90, 0x09, 0x11, 0xa4, 0x9e, 0x3d, 0xce, 0x9e, 0x94, 0xcf, 0x6b, 0x8d, 0xdb, 0xb3,
	0xc6, 0x15, 0x1b, 0xbd, 0x34, 0x70, 0x27, 0x83, 0x57, 0x14, 0xf4, 0x09, 0x94, 0xc7, 0x2c, 0x9c,
	0xfa, 0xb3, 0xe1, 0x1d, 0x99, 0x07, 0xf5, 0xdc, 0x71, 0xf6, 0x64, 0xbf, 0x93, 0xc1, 0xa0, 0xc1,
	0x9f, 0xc8, 0x3c, 0x40, 0x1f, 0x42, 0xf1, 0x2d, 0x1b, 0x69, 0xf9, 0x8e, 0x91, 0xef, 0xbd, 0x65,
	0x23, 0x25, 0x7c, 0x00, 0x95, 0x77, 0x2c, 0xba, 0xe1, 0x0b, 0x32, 0xa6, 0x43, 0x41, 0xa2, 0xfa,
	0xae, 0x61, 0xec, 0xaf, 0x60, 0x8f, 0x44, 0xa8, 0x01, 0x68, 0x8d, 0x36, 0x9c, 0xb0, 0x90, 0xd6,
	0xf3, 0xc7, 0xd9, 0x93, 0x62, 0x27, 0x83, 0xad, 0x34, 0xf7, 0x82, 0x85, 0xf4, 0x79, 0x09, 0xf6,
	0xc6, 0x2c, 0x14, 0x34, 0x14, 0xf6, 0x37, 0x60, 0xa9, 0x40, 0x55, 0x8c, 0x7c, 0xc1, 0x42, 0x4e,
	0xd1, 0x03, 0x28, 0x70, 0x41, 0xc4, 0x92, 0x9b, 0x10, 0x2b, 0x26, 0x44, 0x57, 0x81, 0xd8, 0x08,
	0xed, 0xdf, 0xb3, 0x50, 0xeb, 0xf9, 0x5c, 0x5e, 0xe5, 0x71, 0x7e, 0xbe, 0x80, 0xc2, 0xd4, 0x0f,
	0x04, 0x8d, 0xea, 0xd9, 0xe3, 0x9d, 0x93, 0xf2, 0xf9, 0xa1, 0xbc, 0xfa, 0x83, 0x42, 0xda, 0xbf,
	0x2e, 0x22, 0xca, 0xb9, 0xcf, 0x42, 0x6c, 0x38, 0xe8, 0x33, 0xc8, 0xb3, 0x68, 0x42, 0xa3, 0x7a,
	0x4e, 0x91, 0x0f, 0x24, 0xb9, 0x2f, 0x81, 0x14, 0x57, 0x33, 0xd0, 0x21, 0xe4, 0xb9, 0xf4, 0x53,
	0xe5, 0x28, 0x8f, 0xf5, 0x41, 0xa2, 0x81, 0x3f, 0xf7, 0x85, 0xca, 0x4b, 0x1e, 0xeb, 0x83, 0xfd,
	0x35, 0x58, 0x9b, 0x26, 0xd1, 0xa7, 0x90, 0x17, 0x34, 0x9a, 0x73, 0xe3, 0x57, 0x35, 0xf1, 0xcb,
	0xa3, 0xd1, 0x1c, 0x6b, 0xa1, 0x3d, 0x01, 0x48, 0x40, 0xa9, 0x7d, 0xea, 0xd3, 0x60, 0xa2, 0xd2,
	0x50, 0xc2, 0xfa, 0x20, 0xd1, 0x5b, 0x12, 0x2c, 0xa9, 0xaa, 0x66, 0x09, 0xeb, 0x03, 0x3a, 0x85,
	0x12, 0x5b, 0xd0, 0x88, 0x08, 0x9f, 0x85, 0xca, 0xc7, 0xea, 0xf9, 0x7e, 0x62, 0xa3, 0xbf, 0xc0,
	0x89, 0xd8, 0x6e, 0x43, 0x6d, 0x23, 0xca, 0x7f, 0x31, 0xf5, 0x11, 0x94, 0x08, 0x1f, 0xd3, 0x70,
	0xe2, 0x87, 0x33, 0x65, 0xae, 0x88, 0x13, 0xc0, 0xee, 0x83, 0x95, 0xa4, 0xdf, 0x94, 0xee, 0x10,
	0xf2, 0x82, 0x09, 0x12, 0x28, 0x3d, 0x79, 0xac, 0x0f, 0xb2, 0xa0, 0x11, 0xe5, 0xcb, 0x40, 0x98,
	0x44, 0x6f, 0x16, 0x54, 0x0b, 0xed, 0xef, 0xc1, 0x72, 0x97, 0x23, 0x3e, 0x8e, 0xfc, 0x11, 0xfd,
	0x5f, 0x05, 0xb5, 0xbf, 0x85, 0x7b, 0x29, 0x0d, 0x49, 0x3b, 0x19, 0xeb, 0xdb, 0xdb, 0xc9, 0x58,
	0xbf, 0x0f, 0x95, 0x4b, 0x2a, 0x52, 0x6f, 0x0d, 0xc1, 0x6e, 0x48, 0xe6, 0xd4, 0xa4, 0x44, 0x7d,
	0xdb, 0xcf, 0xa0, 0x1a, 0x93, 0xfe, 0x9b, 0xf6, 0x57, 0x50, 0x91, 0xc9, 0xa2, 0xe1, 0x7b, 0xb4,
	0xa3, 0x3a, 0xec, 0x2d, 0x17, 0x13, 0x22, 0x28, 0x37, 0xd9, 0x8e, 0x8f, 0x92, 0x1d, 0xb0, 0x19,
	0x57, 0x95, 0x2d, 0x62, 0xf5, 0x6d, 0x33, 0xa8, 0xc6, 0x2a, 0x8d, 0x2f, 0x0f, 0xa1, 0xa0, 0x2f,
	0x6c, 0xf5, 0xa5, 0x93, 0xc1, 0x46, 0x2c, 0x1b, 0x9f, 0x07, 0xfe, 0x58, 0xf7, 0x50, 0xf9, 0xfc,
	0x9e, 0xe4, 0xf5, 0xd8, 0xcc, 0x95, 0x58, 0xfb, 0x96, 0x86, 0xa2, 0x93, 0xc1, 0x9a, 0x91, 0x7e,
	0xab, 0x7f, 0x65, 0xa1, 0xb4, 0xd2, 0xb6, 0x35, 0x80, 0xcf, 0x53, 0xe3, 0x29, 0xb7, 0x75, 0x3c,
	0xa5, 0x86, 0x93, 0x0d, 0xf9, 0xc5, 0x1b, 0xc2, 0x69, 0xba, 0x5d, 0xaf, 0xd8, 0x68, 0x20, 0x31,
	0xac, 0x45, 0xe8, 0x0c, 0xe4, 0xac, 0x9a, 0xf8, 0xb2, 0x6f, 0xb9, 0x7a, 0x65, 0xc6, 0xdb, 0x2b,
	0x36, 0x6a, 0xad, 0x04, 0x38, 0x45, 0x92, 0x49, 0x9c, 0x50, 0x41, 0xfc, 0x80, 0xab, 0x09, 0x54,
	0xc2, 0xf1, 0xd1, 0xfe, 0x23, 0x07, 0xe5, 0x94, 0x2b, 0xb2, 0x59, 0xd9, 0xbb, 0x50, 0xb5, 0x96,
	0x6a, 0x7a, 0x75, 0x40, 0x0d, 0x80, 0x88, 0x2e, 0x18, 0xf7, 0x05, 0x8b, 0xee, 0x4c, 0x14, 0xea,
	0xb9, 0xe2, 0x15, 0x8a, 0x53, 0x0c, 0x74, 0x02, 0x7b, 0x22, 0xf2, 0x67, 0x33, 0x1a, 0x99, 0x40,
	0xaa, 0xc6, 0x3f, 0x4f, 0xa3, 0x38, 0x16, 0xa3, 0xa7, 0xb0, 0x37, 0x8e, 0x28, 0x11, 0x74, 0x62,
	0x22, 0x39, 0x6a, 0xe8, 0x45, 0xd0, 0x88, 0x17, 0x41, 0xc3, 0x8b, 0x17, 0x01, 0x8e, 0xa9, 0xe8,
	0x2b, 0x28, 0x4e, 0xfd, 0xd0, 0xe7, 0x6f, 0xe8, 0x44, 0x05, 0xf4, 0xfe, 0x6b, 0x2b, 0x2e, 0x7a,
	0x0c, 0x65, 0x12, 0x86, 0x4c, 0x10, 0x9d, 0xbb, 0x42, 0x32, 0x77, 0x9a, 0x2b, 0x18, 0xa7, 0x29,
	0xf6, 0xcf, 0x00, 0x49, 0x8c, 0xb2, 0xbe, 0x6f, 0x18, 0x17, 0x71, 0x7d, 0xe5, 0x77, 0x92, 0xb1,
	0x5c, 0x3a, 0x63, 0x08, 0x76, 0x65, 0x3e, 0x54, 0xf8, 0x25, 0xac, 0xbe, 0x91, 0x05, 0x3b, 0x11,
	0x9d, 0xaa, 0x38, 0x4b, 0x58, 0x7e, 0xda, 0x4f, 0x01, 0x12, 0xc3, 0x52, 0x7e, 0x43, 0xef, 0x8c,
	0x72, 0xf9, 0xb9, 0x7d, 0xae, 0xd9, 0x0e, 0x54, 0xd6, 0x4a, 0x2d, 0xcb, 0xcb, 0x97, 0xe3, 0x31,
	0xe5, 0x7a, 0x3b, 0x14, 0x71, 0x7c, 0x44, 0xf7, 0xa1, 0x32, 0x25, 0x7e, 0xb0, 0x8c, 0xe8, 0x70,
	0xcc, 0x96, 0xa1, 0x50, 0x8a, 0xf2, 0x78, 0xdf, 0x80, 0x2d, 0x89, 0xd9, 0x53, 0xa8, 0xac, 0x35,
	0xfa, 0xd6, 0x36, 0x7e, 0x18, 0x77, 0x66, 0x4e, 0x15, 0x74, 0xed, 0x79, 0xac, 0xb5, 0x67, 0x1d,
	0xf6, 0x16, 0xe4, 0x2e, 0x60, 0x64, 0x62, 0x82, 0x8f, 0x8f, 0xa7, 0x43, 0x28, 0xc6, 0xa3, 0x17,
	0x55, 0xa0, 0xd4, 0x1f, 0x0c, 0xdb, 0xaf, 0xae, 0x9b, 0x3d, 0xd7, 0xca, 0x20, 0x04, 0xd5, 0xfe,
	0x60, 0xe8, 0x7a, 0x4d, 0xec, 0xb9, 0xc3, 0xd7, 0x5d, 0xaf, 0x63, 0x65, 0x91, 0x05, 0xfb, 0x92,
	0xe2, 0x5c, 0x18, 0x24, 0x87, 0x6a, 0x50, 0xee, 0x0f, 0x86, 0xad, 0xbe, 0xe3, 0x35, 0xbb, 0x8e,
	0x6b, 0xed, 0xc4, 0x5a, 0x7e, 0xec, 0xba, 0x9e, 0x6b, 0xed, 0x9e, 0x5e, 0x02, 0x24, 0x3d, 0x86,
	0x0e, 0xa0, 0xe6, 0xe1, 0xee, 0xe5, 0x65, 0x1b, 0x0f, 0xaf, 0x9d, 0x17, 0x4e, 0xff, 0xb5, 0x63,
	0x65, 0xa4, 0xd2, 0x18, 0x1c, 0x5c, 0xbb, 0xd2, 0x0c, 0x82, 0x6a, 0x8c, 0xbc, 0x6c, 0x3a, 0xd7,
	0xcd, 0x9e, 0x95, 0x3b, 0xfd, 0x0d, 0x8a, 0xf1, 0xab, 0x43, 0xf7, 0xa0, 0x32, 0xe8, 0x34, 0xdd,
	0x76, 0x4a, 0xc9, 0x01, 0xd4, 0x34, 0x34, 0xc0, 0xed, 0x41, 0x13, 0x77, 0x9d, 0x4b, 0xad, 0x47,
	0x83, 0x2a, 0x0a, 0x89, 0xe5, 0x92, 0xbb, 0xf8, 0xda, 0x71, 0x24, 0xb4, 0x83, 0xaa, 0x00, 0x1a,
	0xba, 0xe8, 0x3b, 0x6d, 0x6b, 0x37, 0xa1, 0xb4, 0x7a, 0xed, 0xa6, 0x73, 0x3d, 0xb0, 0xf2, 0xa7,
	0xf3, 0xa4, 0x1e, 0xda, 0x85, 0x03, 0xa8, 0xb9, 0xbd, 0x6e, 0xab, 0x3d, 0x6c, 0x3e, 0x6f, 0x3a,
	0xf2, 0xde, 0x85, 0x95, 0x41, 0x87, 0x60, 0x69, 0xb0, 0xd5, 0x69, 0xb7, 0x5e, 0x0c, 0xfa, 0x5d,
	0xc7, 0xb3, 0xb2, 0x32, 0x45, 0x1a, 0x55, 0x5e, 0x68, 0x17, 0x0c, 0xad, 0xef, 0x78, 0x6d, 0xc7,
	0xd3, 0x59, 0xd3, 0x50, 0xdb, 0xb9, 0xb0, 0x76, 0xcf, 0xff, 0xcc, 0x41, 0xf9, 0x05, 0xa5, 0x81,
	0x4b, 0xa3, 0x5b, 0x7f, 0x4c, 0x51, 0x0b, 0x2a, 0x6b, 0xff, 0x59, 0xa8, 0x2e, 0x6b, 0xbd, 0xed,
	0xd7, 0xeb, 0xe8, 0x70, 0x25, 0x49, 0x8d, 0x7f, 0x3b, 0x73, 0x92, 0x45, 0xcf, 0xa0, 0x18, 0x2f,
	0x42, 0xa4, 0xfe, 0x21, 0x36, 0xfe, 0x4a, 0xf4, 0xd5, 0xcd, 0x5d, 0x69, 0x67, 0xd0, 0x77, 0x50,
	0x5a, 0xad, 0x2b, 0xa4, 0xf5, 0x6f, 0xec, 0xbf, 0xa3, 0x0f, 0x36, 0xd0, 0xf8, 0xee, 0xe3, 0x2c,
	0x3a, 0x83, 0x82, 0xde, 0x45, 0x48, 0x35, 0xe8, 0xda, 0xf2, 0x3a, 0x42, 0x69, 0x68, 0x65, 0xf0,
	0x09, 0x14, 0xf4, 0xca, 0xd0, 0x57, 0xd6, 0x36, 0x92, 0xbe, 0xb2, 0xbe, 0x51, 0xa4, 0x9d, 0x51,
	0x41, 0x8d, 0x99, 0x27, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xdc, 0x43, 0xe3, 0xc6, 0x0a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeelServiceClient is the client API for KeelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeelServiceClient interface {
	// StartLocalJob starts a job by uploading the workspace content directly. The incoming requests are expected in the following order:
	//   1. metadata
	//   2. all bytes constituting the keel/config.yaml
	//   3. all bytes constituting the job YAML that will be executed (that the config.yaml points to)
	//   4. all bytes constituting the gzipped workspace tar stream
	//   5. the workspace tar stream done marker
	StartLocalJob(ctx context.Context, opts ...grpc.CallOption) (KeelService_StartLocalJobClient, error)
	ListJobs(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	// Subscribe listens to new jobs/job updates
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (KeelService_SubscribeClient, error)
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error)
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (KeelService_ListenClient, error)
}

type keelServiceClient struct {
	cc *grpc.ClientConn
}

func NewKeelServiceClient(cc *grpc.ClientConn) KeelServiceClient {
	return &keelServiceClient{cc}
}

func (c *keelServiceClient) StartLocalJob(ctx context.Context, opts ...grpc.CallOption) (KeelService_StartLocalJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_KeelService_serviceDesc.Streams[0], "/v1.KeelService/StartLocalJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &keelServiceStartLocalJobClient{stream}
	return x, nil
}

type KeelService_StartLocalJobClient interface {
	Send(*StartLocalJobRequest) error
	CloseAndRecv() (*StartJobResponse, error)
	grpc.ClientStream
}

type keelServiceStartLocalJobClient struct {
	grpc.ClientStream
}

func (x *keelServiceStartLocalJobClient) Send(m *StartLocalJobRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *keelServiceStartLocalJobClient) CloseAndRecv() (*StartJobResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StartJobResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keelServiceClient) ListJobs(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/v1.KeelService/ListJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keelServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (KeelService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_KeelService_serviceDesc.Streams[1], "/v1.KeelService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &keelServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type KeelService_SubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type keelServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *keelServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keelServiceClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error) {
	out := new(GetJobResponse)
	err := c.cc.Invoke(ctx, "/v1.KeelService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keelServiceClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (KeelService_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_KeelService_serviceDesc.Streams[2], "/v1.KeelService/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &keelServiceListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type KeelService_ListenClient interface {
	Recv() (*ListenResponse, error)
	grpc.ClientStream
}

type keelServiceListenClient struct {
	grpc.ClientStream
}

func (x *keelServiceListenClient) Recv() (*ListenResponse, error) {
	m := new(ListenResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// KeelServiceServer is the server API for KeelService service.
type KeelServiceServer interface {
	// StartLocalJob starts a job by uploading the workspace content directly. The incoming requests are expected in the following order:
	//   1. metadata
	//   2. all bytes constituting the keel/config.yaml
	//   3. all bytes constituting the job YAML that will be executed (that the config.yaml points to)
	//   4. all bytes constituting the gzipped workspace tar stream
	//   5. the workspace tar stream done marker
	StartLocalJob(KeelService_StartLocalJobServer) error
	ListJobs(context.Context, *ListJobsRequest) (*ListJobsResponse, error)
	// Subscribe listens to new jobs/job updates
	Subscribe(*SubscribeRequest, KeelService_SubscribeServer) error
	GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error)
	Listen(*ListenRequest, KeelService_ListenServer) error
}

// UnimplementedKeelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKeelServiceServer struct {
}

func (*UnimplementedKeelServiceServer) StartLocalJob(srv KeelService_StartLocalJobServer) error {
	return status.Errorf(codes.Unimplemented, "method StartLocalJob not implemented")
}
func (*UnimplementedKeelServiceServer) ListJobs(ctx context.Context, req *ListJobsRequest) (*ListJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobs not implemented")
}
func (*UnimplementedKeelServiceServer) Subscribe(req *SubscribeRequest, srv KeelService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedKeelServiceServer) GetJob(ctx context.Context, req *GetJobRequest) (*GetJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedKeelServiceServer) Listen(req *ListenRequest, srv KeelService_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterKeelServiceServer(s *grpc.Server, srv KeelServiceServer) {
	s.RegisterService(&_KeelService_serviceDesc, srv)
}

func _KeelService_StartLocalJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(KeelServiceServer).StartLocalJob(&keelServiceStartLocalJobServer{stream})
}

type KeelService_StartLocalJobServer interface {
	SendAndClose(*StartJobResponse) error
	Recv() (*StartLocalJobRequest, error)
	grpc.ServerStream
}

type keelServiceStartLocalJobServer struct {
	grpc.ServerStream
}

func (x *keelServiceStartLocalJobServer) SendAndClose(m *StartJobResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *keelServiceStartLocalJobServer) Recv() (*StartLocalJobRequest, error) {
	m := new(StartLocalJobRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _KeelService_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeelServiceServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.KeelService/ListJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeelServiceServer).ListJobs(ctx, req.(*ListJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeelService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KeelServiceServer).Subscribe(m, &keelServiceSubscribeServer{stream})
}

type KeelService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type keelServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *keelServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _KeelService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeelServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.KeelService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeelServiceServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeelService_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KeelServiceServer).Listen(m, &keelServiceListenServer{stream})
}

type KeelService_ListenServer interface {
	Send(*ListenResponse) error
	grpc.ServerStream
}

type keelServiceListenServer struct {
	grpc.ServerStream
}

func (x *keelServiceListenServer) Send(m *ListenResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _KeelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.KeelService",
	HandlerType: (*KeelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListJobs",
			Handler:    _KeelService_ListJobs_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _KeelService_GetJob_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StartLocalJob",
			Handler:       _KeelService_StartLocalJob_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Subscribe",
			Handler:       _KeelService_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Listen",
			Handler:       _KeelService_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "keel.proto",
}
