// Code generated by protoc-gen-go. DO NOT EDIT.
// source: werft.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilterOp int32

const (
	FilterOp_OP_EQUALS      FilterOp = 0
	FilterOp_OP_STARTS_WITH FilterOp = 1
	FilterOp_OP_ENDS_WITH   FilterOp = 2
	FilterOp_OP_CONTAINS    FilterOp = 3
	FilterOp_OP_EXISTS      FilterOp = 4
)

var FilterOp_name = map[int32]string{
	0: "OP_EQUALS",
	1: "OP_STARTS_WITH",
	2: "OP_ENDS_WITH",
	3: "OP_CONTAINS",
	4: "OP_EXISTS",
}

var FilterOp_value = map[string]int32{
	"OP_EQUALS":      0,
	"OP_STARTS_WITH": 1,
	"OP_ENDS_WITH":   2,
	"OP_CONTAINS":    3,
	"OP_EXISTS":      4,
}

func (x FilterOp) String() string {
	return proto.EnumName(FilterOp_name, int32(x))
}

func (FilterOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{0}
}

type ListenRequestLogs int32

const (
	ListenRequestLogs_LOGS_DISABLED ListenRequestLogs = 0
	ListenRequestLogs_LOGS_UNSLICED ListenRequestLogs = 1
	ListenRequestLogs_LOGS_RAW      ListenRequestLogs = 2
	ListenRequestLogs_LOGS_HTML     ListenRequestLogs = 3
)

var ListenRequestLogs_name = map[int32]string{
	0: "LOGS_DISABLED",
	1: "LOGS_UNSLICED",
	2: "LOGS_RAW",
	3: "LOGS_HTML",
}

var ListenRequestLogs_value = map[string]int32{
	"LOGS_DISABLED": 0,
	"LOGS_UNSLICED": 1,
	"LOGS_RAW":      2,
	"LOGS_HTML":     3,
}

func (x ListenRequestLogs) String() string {
	return proto.EnumName(ListenRequestLogs_name, int32(x))
}

func (ListenRequestLogs) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{1}
}

type JobTrigger int32

const (
	JobTrigger_TRIGGER_UNKNOWN JobTrigger = 0
	JobTrigger_TRIGGER_MANUAL  JobTrigger = 1
	JobTrigger_TRIGGER_PUSH    JobTrigger = 2
	JobTrigger_TRIGGER_DELETED JobTrigger = 3
)

var JobTrigger_name = map[int32]string{
	0: "TRIGGER_UNKNOWN",
	1: "TRIGGER_MANUAL",
	2: "TRIGGER_PUSH",
	3: "TRIGGER_DELETED",
}

var JobTrigger_value = map[string]int32{
	"TRIGGER_UNKNOWN": 0,
	"TRIGGER_MANUAL":  1,
	"TRIGGER_PUSH":    2,
	"TRIGGER_DELETED": 3,
}

func (x JobTrigger) String() string {
	return proto.EnumName(JobTrigger_name, int32(x))
}

func (JobTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{2}
}

type JobPhase int32

const (
	// Unknown means we don't know what state the job is in
	JobPhase_PHASE_UNKNOWN JobPhase = 0
	// Preparing means the job hasn't started yet and isn't consuming resources in the system
	JobPhase_PHASE_PREPARING JobPhase = 1
	// Starting means the job has been scheduled and is waiting to run. Things that might prevent it
	// from running already are pod scheduling, image pull or container startup.
	JobPhase_PHASE_STARTING JobPhase = 2
	// Running means the job is actually running and doing work.
	JobPhase_PHASE_RUNNING JobPhase = 3
	// Done means the job has run and is finished
	JobPhase_PHASE_DONE JobPhase = 4
	// Cleaning means the job is in post-run cleanup
	JobPhase_PHASE_CLEANUP JobPhase = 5
)

var JobPhase_name = map[int32]string{
	0: "PHASE_UNKNOWN",
	1: "PHASE_PREPARING",
	2: "PHASE_STARTING",
	3: "PHASE_RUNNING",
	4: "PHASE_DONE",
	5: "PHASE_CLEANUP",
}

var JobPhase_value = map[string]int32{
	"PHASE_UNKNOWN":   0,
	"PHASE_PREPARING": 1,
	"PHASE_STARTING":  2,
	"PHASE_RUNNING":   3,
	"PHASE_DONE":      4,
	"PHASE_CLEANUP":   5,
}

func (x JobPhase) String() string {
	return proto.EnumName(JobPhase_name, int32(x))
}

func (JobPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{3}
}

type LogSliceType int32

const (
	LogSliceType_SLICE_ABANDONED LogSliceType = 0
	LogSliceType_SLICE_PHASE     LogSliceType = 1
	LogSliceType_SLICE_START     LogSliceType = 2
	LogSliceType_SLICE_CONTENT   LogSliceType = 3
	LogSliceType_SLICE_DONE      LogSliceType = 4
	LogSliceType_SLICE_FAIL      LogSliceType = 5
	LogSliceType_SLICE_RESULT    LogSliceType = 6
)

var LogSliceType_name = map[int32]string{
	0: "SLICE_ABANDONED",
	1: "SLICE_PHASE",
	2: "SLICE_START",
	3: "SLICE_CONTENT",
	4: "SLICE_DONE",
	5: "SLICE_FAIL",
	6: "SLICE_RESULT",
}

var LogSliceType_value = map[string]int32{
	"SLICE_ABANDONED": 0,
	"SLICE_PHASE":     1,
	"SLICE_START":     2,
	"SLICE_CONTENT":   3,
	"SLICE_DONE":      4,
	"SLICE_FAIL":      5,
	"SLICE_RESULT":    6,
}

func (x LogSliceType) String() string {
	return proto.EnumName(LogSliceType_name, int32(x))
}

func (LogSliceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{4}
}

type StartLocalJobRequest struct {
	// Types that are valid to be assigned to Content:
	//	*StartLocalJobRequest_Metadata
	//	*StartLocalJobRequest_ConfigYaml
	//	*StartLocalJobRequest_JobYaml
	//	*StartLocalJobRequest_WorkspaceTar
	//	*StartLocalJobRequest_WorkspaceTarDone
	Content              isStartLocalJobRequest_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StartLocalJobRequest) Reset()         { *m = StartLocalJobRequest{} }
func (m *StartLocalJobRequest) String() string { return proto.CompactTextString(m) }
func (*StartLocalJobRequest) ProtoMessage()    {}
func (*StartLocalJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{0}
}

func (m *StartLocalJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartLocalJobRequest.Unmarshal(m, b)
}
func (m *StartLocalJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartLocalJobRequest.Marshal(b, m, deterministic)
}
func (m *StartLocalJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartLocalJobRequest.Merge(m, src)
}
func (m *StartLocalJobRequest) XXX_Size() int {
	return xxx_messageInfo_StartLocalJobRequest.Size(m)
}
func (m *StartLocalJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartLocalJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartLocalJobRequest proto.InternalMessageInfo

type isStartLocalJobRequest_Content interface {
	isStartLocalJobRequest_Content()
}

type StartLocalJobRequest_Metadata struct {
	Metadata *JobMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type StartLocalJobRequest_ConfigYaml struct {
	ConfigYaml []byte `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3,oneof"`
}

type StartLocalJobRequest_JobYaml struct {
	JobYaml []byte `protobuf:"bytes,3,opt,name=job_yaml,json=jobYaml,proto3,oneof"`
}

type StartLocalJobRequest_WorkspaceTar struct {
	WorkspaceTar []byte `protobuf:"bytes,4,opt,name=workspace_tar,json=workspaceTar,proto3,oneof"`
}

type StartLocalJobRequest_WorkspaceTarDone struct {
	WorkspaceTarDone bool `protobuf:"varint,5,opt,name=workspace_tar_done,json=workspaceTarDone,proto3,oneof"`
}

func (*StartLocalJobRequest_Metadata) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_ConfigYaml) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_JobYaml) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_WorkspaceTar) isStartLocalJobRequest_Content() {}

func (*StartLocalJobRequest_WorkspaceTarDone) isStartLocalJobRequest_Content() {}

func (m *StartLocalJobRequest) GetContent() isStartLocalJobRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *StartLocalJobRequest) GetMetadata() *JobMetadata {
	if x, ok := m.GetContent().(*StartLocalJobRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *StartLocalJobRequest) GetConfigYaml() []byte {
	if x, ok := m.GetContent().(*StartLocalJobRequest_ConfigYaml); ok {
		return x.ConfigYaml
	}
	return nil
}

func (m *StartLocalJobRequest) GetJobYaml() []byte {
	if x, ok := m.GetContent().(*StartLocalJobRequest_JobYaml); ok {
		return x.JobYaml
	}
	return nil
}

func (m *StartLocalJobRequest) GetWorkspaceTar() []byte {
	if x, ok := m.GetContent().(*StartLocalJobRequest_WorkspaceTar); ok {
		return x.WorkspaceTar
	}
	return nil
}

func (m *StartLocalJobRequest) GetWorkspaceTarDone() bool {
	if x, ok := m.GetContent().(*StartLocalJobRequest_WorkspaceTarDone); ok {
		return x.WorkspaceTarDone
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StartLocalJobRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StartLocalJobRequest_Metadata)(nil),
		(*StartLocalJobRequest_ConfigYaml)(nil),
		(*StartLocalJobRequest_JobYaml)(nil),
		(*StartLocalJobRequest_WorkspaceTar)(nil),
		(*StartLocalJobRequest_WorkspaceTarDone)(nil),
	}
}

type StartJobResponse struct {
	Status               *JobStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StartJobResponse) Reset()         { *m = StartJobResponse{} }
func (m *StartJobResponse) String() string { return proto.CompactTextString(m) }
func (*StartJobResponse) ProtoMessage()    {}
func (*StartJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{1}
}

func (m *StartJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobResponse.Unmarshal(m, b)
}
func (m *StartJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobResponse.Marshal(b, m, deterministic)
}
func (m *StartJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobResponse.Merge(m, src)
}
func (m *StartJobResponse) XXX_Size() int {
	return xxx_messageInfo_StartJobResponse.Size(m)
}
func (m *StartJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobResponse proto.InternalMessageInfo

func (m *StartJobResponse) GetStatus() *JobStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type StartGitHubJobRequest struct {
	Metadata             *JobMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	JobPath              string       `protobuf:"bytes,2,opt,name=job_path,json=jobPath,proto3" json:"job_path,omitempty"`
	JobYaml              []byte       `protobuf:"bytes,3,opt,name=job_yaml,json=jobYaml,proto3" json:"job_yaml,omitempty"`
	GithubToken          string       `protobuf:"bytes,4,opt,name=github_token,json=githubToken,proto3" json:"github_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StartGitHubJobRequest) Reset()         { *m = StartGitHubJobRequest{} }
func (m *StartGitHubJobRequest) String() string { return proto.CompactTextString(m) }
func (*StartGitHubJobRequest) ProtoMessage()    {}
func (*StartGitHubJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{2}
}

func (m *StartGitHubJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartGitHubJobRequest.Unmarshal(m, b)
}
func (m *StartGitHubJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartGitHubJobRequest.Marshal(b, m, deterministic)
}
func (m *StartGitHubJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartGitHubJobRequest.Merge(m, src)
}
func (m *StartGitHubJobRequest) XXX_Size() int {
	return xxx_messageInfo_StartGitHubJobRequest.Size(m)
}
func (m *StartGitHubJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartGitHubJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartGitHubJobRequest proto.InternalMessageInfo

func (m *StartGitHubJobRequest) GetMetadata() *JobMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *StartGitHubJobRequest) GetJobPath() string {
	if m != nil {
		return m.JobPath
	}
	return ""
}

func (m *StartGitHubJobRequest) GetJobYaml() []byte {
	if m != nil {
		return m.JobYaml
	}
	return nil
}

func (m *StartGitHubJobRequest) GetGithubToken() string {
	if m != nil {
		return m.GithubToken
	}
	return ""
}

type StartFromPreviousJobRequest struct {
	PreviousJob          string   `protobuf:"bytes,1,opt,name=previous_job,json=previousJob,proto3" json:"previous_job,omitempty"`
	GithubToken          string   `protobuf:"bytes,2,opt,name=github_token,json=githubToken,proto3" json:"github_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFromPreviousJobRequest) Reset()         { *m = StartFromPreviousJobRequest{} }
func (m *StartFromPreviousJobRequest) String() string { return proto.CompactTextString(m) }
func (*StartFromPreviousJobRequest) ProtoMessage()    {}
func (*StartFromPreviousJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{3}
}

func (m *StartFromPreviousJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFromPreviousJobRequest.Unmarshal(m, b)
}
func (m *StartFromPreviousJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFromPreviousJobRequest.Marshal(b, m, deterministic)
}
func (m *StartFromPreviousJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFromPreviousJobRequest.Merge(m, src)
}
func (m *StartFromPreviousJobRequest) XXX_Size() int {
	return xxx_messageInfo_StartFromPreviousJobRequest.Size(m)
}
func (m *StartFromPreviousJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFromPreviousJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartFromPreviousJobRequest proto.InternalMessageInfo

func (m *StartFromPreviousJobRequest) GetPreviousJob() string {
	if m != nil {
		return m.PreviousJob
	}
	return ""
}

func (m *StartFromPreviousJobRequest) GetGithubToken() string {
	if m != nil {
		return m.GithubToken
	}
	return ""
}

type ListJobsRequest struct {
	Filter               []*FilterExpression `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	Order                []*OrderExpression  `protobuf:"bytes,2,rep,name=order,proto3" json:"order,omitempty"`
	Start                int32               `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit                int32               `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListJobsRequest) Reset()         { *m = ListJobsRequest{} }
func (m *ListJobsRequest) String() string { return proto.CompactTextString(m) }
func (*ListJobsRequest) ProtoMessage()    {}
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{4}
}

func (m *ListJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsRequest.Unmarshal(m, b)
}
func (m *ListJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsRequest.Marshal(b, m, deterministic)
}
func (m *ListJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsRequest.Merge(m, src)
}
func (m *ListJobsRequest) XXX_Size() int {
	return xxx_messageInfo_ListJobsRequest.Size(m)
}
func (m *ListJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsRequest proto.InternalMessageInfo

func (m *ListJobsRequest) GetFilter() []*FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListJobsRequest) GetOrder() []*OrderExpression {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *ListJobsRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ListJobsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FilterExpression struct {
	Terms                []*FilterTerm `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FilterExpression) Reset()         { *m = FilterExpression{} }
func (m *FilterExpression) String() string { return proto.CompactTextString(m) }
func (*FilterExpression) ProtoMessage()    {}
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{5}
}

func (m *FilterExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterExpression.Unmarshal(m, b)
}
func (m *FilterExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterExpression.Marshal(b, m, deterministic)
}
func (m *FilterExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterExpression.Merge(m, src)
}
func (m *FilterExpression) XXX_Size() int {
	return xxx_messageInfo_FilterExpression.Size(m)
}
func (m *FilterExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterExpression.DiscardUnknown(m)
}

var xxx_messageInfo_FilterExpression proto.InternalMessageInfo

func (m *FilterExpression) GetTerms() []*FilterTerm {
	if m != nil {
		return m.Terms
	}
	return nil
}

type FilterTerm struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operation            FilterOp `protobuf:"varint,3,opt,name=operation,proto3,enum=v1.FilterOp" json:"operation,omitempty"`
	Negate               bool     `protobuf:"varint,4,opt,name=negate,proto3" json:"negate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterTerm) Reset()         { *m = FilterTerm{} }
func (m *FilterTerm) String() string { return proto.CompactTextString(m) }
func (*FilterTerm) ProtoMessage()    {}
func (*FilterTerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{6}
}

func (m *FilterTerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterTerm.Unmarshal(m, b)
}
func (m *FilterTerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterTerm.Marshal(b, m, deterministic)
}
func (m *FilterTerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterTerm.Merge(m, src)
}
func (m *FilterTerm) XXX_Size() int {
	return xxx_messageInfo_FilterTerm.Size(m)
}
func (m *FilterTerm) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterTerm.DiscardUnknown(m)
}

var xxx_messageInfo_FilterTerm proto.InternalMessageInfo

func (m *FilterTerm) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *FilterTerm) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *FilterTerm) GetOperation() FilterOp {
	if m != nil {
		return m.Operation
	}
	return FilterOp_OP_EQUALS
}

func (m *FilterTerm) GetNegate() bool {
	if m != nil {
		return m.Negate
	}
	return false
}

type OrderExpression struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Ascending            bool     `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderExpression) Reset()         { *m = OrderExpression{} }
func (m *OrderExpression) String() string { return proto.CompactTextString(m) }
func (*OrderExpression) ProtoMessage()    {}
func (*OrderExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{7}
}

func (m *OrderExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderExpression.Unmarshal(m, b)
}
func (m *OrderExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderExpression.Marshal(b, m, deterministic)
}
func (m *OrderExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderExpression.Merge(m, src)
}
func (m *OrderExpression) XXX_Size() int {
	return xxx_messageInfo_OrderExpression.Size(m)
}
func (m *OrderExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderExpression.DiscardUnknown(m)
}

var xxx_messageInfo_OrderExpression proto.InternalMessageInfo

func (m *OrderExpression) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *OrderExpression) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type ListJobsResponse struct {
	Total                int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Result               []*JobStatus `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListJobsResponse) Reset()         { *m = ListJobsResponse{} }
func (m *ListJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobsResponse) ProtoMessage()    {}
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{8}
}

func (m *ListJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsResponse.Unmarshal(m, b)
}
func (m *ListJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsResponse.Marshal(b, m, deterministic)
}
func (m *ListJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsResponse.Merge(m, src)
}
func (m *ListJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobsResponse.Size(m)
}
func (m *ListJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsResponse proto.InternalMessageInfo

func (m *ListJobsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListJobsResponse) GetResult() []*JobStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type SubscribeRequest struct {
	Filter               []*FilterExpression `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{9}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetFilter() []*FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

type SubscribeResponse struct {
	Result               *JobStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{10}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetResult() *JobStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetJobRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{11}
}

func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (m *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(m, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetJobResponse struct {
	Result               *JobStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetJobResponse) Reset()         { *m = GetJobResponse{} }
func (m *GetJobResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobResponse) ProtoMessage()    {}
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{12}
}

func (m *GetJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobResponse.Unmarshal(m, b)
}
func (m *GetJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobResponse.Marshal(b, m, deterministic)
}
func (m *GetJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobResponse.Merge(m, src)
}
func (m *GetJobResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobResponse.Size(m)
}
func (m *GetJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobResponse proto.InternalMessageInfo

func (m *GetJobResponse) GetResult() *JobStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type ListenRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Updates              bool              `protobuf:"varint,2,opt,name=updates,proto3" json:"updates,omitempty"`
	Logs                 ListenRequestLogs `protobuf:"varint,3,opt,name=logs,proto3,enum=v1.ListenRequestLogs" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{13}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListenRequest) GetUpdates() bool {
	if m != nil {
		return m.Updates
	}
	return false
}

func (m *ListenRequest) GetLogs() ListenRequestLogs {
	if m != nil {
		return m.Logs
	}
	return ListenRequestLogs_LOGS_DISABLED
}

type ListenResponse struct {
	// Types that are valid to be assigned to Content:
	//	*ListenResponse_Update
	//	*ListenResponse_Slice
	Content              isListenResponse_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListenResponse) Reset()         { *m = ListenResponse{} }
func (m *ListenResponse) String() string { return proto.CompactTextString(m) }
func (*ListenResponse) ProtoMessage()    {}
func (*ListenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{14}
}

func (m *ListenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenResponse.Unmarshal(m, b)
}
func (m *ListenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenResponse.Marshal(b, m, deterministic)
}
func (m *ListenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenResponse.Merge(m, src)
}
func (m *ListenResponse) XXX_Size() int {
	return xxx_messageInfo_ListenResponse.Size(m)
}
func (m *ListenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListenResponse proto.InternalMessageInfo

type isListenResponse_Content interface {
	isListenResponse_Content()
}

type ListenResponse_Update struct {
	Update *JobStatus `protobuf:"bytes,1,opt,name=update,proto3,oneof"`
}

type ListenResponse_Slice struct {
	Slice *LogSliceEvent `protobuf:"bytes,2,opt,name=slice,proto3,oneof"`
}

func (*ListenResponse_Update) isListenResponse_Content() {}

func (*ListenResponse_Slice) isListenResponse_Content() {}

func (m *ListenResponse) GetContent() isListenResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ListenResponse) GetUpdate() *JobStatus {
	if x, ok := m.GetContent().(*ListenResponse_Update); ok {
		return x.Update
	}
	return nil
}

func (m *ListenResponse) GetSlice() *LogSliceEvent {
	if x, ok := m.GetContent().(*ListenResponse_Slice); ok {
		return x.Slice
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListenResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListenResponse_Update)(nil),
		(*ListenResponse_Slice)(nil),
	}
}

type JobStatus struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Metadata             *JobMetadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Phase                JobPhase       `protobuf:"varint,3,opt,name=phase,proto3,enum=v1.JobPhase" json:"phase,omitempty"`
	Conditions           *JobConditions `protobuf:"bytes,4,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Details              string         `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Results              []*JobResult   `protobuf:"bytes,6,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JobStatus) Reset()         { *m = JobStatus{} }
func (m *JobStatus) String() string { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()    {}
func (*JobStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{15}
}

func (m *JobStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatus.Unmarshal(m, b)
}
func (m *JobStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatus.Marshal(b, m, deterministic)
}
func (m *JobStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatus.Merge(m, src)
}
func (m *JobStatus) XXX_Size() int {
	return xxx_messageInfo_JobStatus.Size(m)
}
func (m *JobStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatus proto.InternalMessageInfo

func (m *JobStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobStatus) GetMetadata() *JobMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *JobStatus) GetPhase() JobPhase {
	if m != nil {
		return m.Phase
	}
	return JobPhase_PHASE_UNKNOWN
}

func (m *JobStatus) GetConditions() *JobConditions {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *JobStatus) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *JobStatus) GetResults() []*JobResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type JobMetadata struct {
	Owner                string               `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repository           *Repository          `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Trigger              JobTrigger           `protobuf:"varint,3,opt,name=trigger,proto3,enum=v1.JobTrigger" json:"trigger,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Finished             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finished,proto3" json:"finished,omitempty"`
	Annotations          []*Annotation        `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JobMetadata) Reset()         { *m = JobMetadata{} }
func (m *JobMetadata) String() string { return proto.CompactTextString(m) }
func (*JobMetadata) ProtoMessage()    {}
func (*JobMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{16}
}

func (m *JobMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMetadata.Unmarshal(m, b)
}
func (m *JobMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMetadata.Marshal(b, m, deterministic)
}
func (m *JobMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMetadata.Merge(m, src)
}
func (m *JobMetadata) XXX_Size() int {
	return xxx_messageInfo_JobMetadata.Size(m)
}
func (m *JobMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_JobMetadata proto.InternalMessageInfo

func (m *JobMetadata) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *JobMetadata) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *JobMetadata) GetTrigger() JobTrigger {
	if m != nil {
		return m.Trigger
	}
	return JobTrigger_TRIGGER_UNKNOWN
}

func (m *JobMetadata) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *JobMetadata) GetFinished() *timestamp.Timestamp {
	if m != nil {
		return m.Finished
	}
	return nil
}

func (m *JobMetadata) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type Repository struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string   `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Ref                  string   `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
	Revision             string   `protobuf:"bytes,5,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{17}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Repository) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Repository) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Repository) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *Repository) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

type Annotation struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Annotation) Reset()         { *m = Annotation{} }
func (m *Annotation) String() string { return proto.CompactTextString(m) }
func (*Annotation) ProtoMessage()    {}
func (*Annotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{18}
}

func (m *Annotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotation.Unmarshal(m, b)
}
func (m *Annotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotation.Marshal(b, m, deterministic)
}
func (m *Annotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotation.Merge(m, src)
}
func (m *Annotation) XXX_Size() int {
	return xxx_messageInfo_Annotation.Size(m)
}
func (m *Annotation) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotation.DiscardUnknown(m)
}

var xxx_messageInfo_Annotation proto.InternalMessageInfo

func (m *Annotation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Annotation) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type JobConditions struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FailureCount         int32    `protobuf:"varint,2,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	CanReplay            bool     `protobuf:"varint,3,opt,name=can_replay,json=canReplay,proto3" json:"can_replay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobConditions) Reset()         { *m = JobConditions{} }
func (m *JobConditions) String() string { return proto.CompactTextString(m) }
func (*JobConditions) ProtoMessage()    {}
func (*JobConditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{19}
}

func (m *JobConditions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobConditions.Unmarshal(m, b)
}
func (m *JobConditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobConditions.Marshal(b, m, deterministic)
}
func (m *JobConditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobConditions.Merge(m, src)
}
func (m *JobConditions) XXX_Size() int {
	return xxx_messageInfo_JobConditions.Size(m)
}
func (m *JobConditions) XXX_DiscardUnknown() {
	xxx_messageInfo_JobConditions.DiscardUnknown(m)
}

var xxx_messageInfo_JobConditions proto.InternalMessageInfo

func (m *JobConditions) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *JobConditions) GetFailureCount() int32 {
	if m != nil {
		return m.FailureCount
	}
	return 0
}

func (m *JobConditions) GetCanReplay() bool {
	if m != nil {
		return m.CanReplay
	}
	return false
}

type JobResult struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Channels             []string `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobResult) Reset()         { *m = JobResult{} }
func (m *JobResult) String() string { return proto.CompactTextString(m) }
func (*JobResult) ProtoMessage()    {}
func (*JobResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{20}
}

func (m *JobResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResult.Unmarshal(m, b)
}
func (m *JobResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResult.Marshal(b, m, deterministic)
}
func (m *JobResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResult.Merge(m, src)
}
func (m *JobResult) XXX_Size() int {
	return xxx_messageInfo_JobResult.Size(m)
}
func (m *JobResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResult.DiscardUnknown(m)
}

var xxx_messageInfo_JobResult proto.InternalMessageInfo

func (m *JobResult) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *JobResult) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *JobResult) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *JobResult) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

type LogSliceEvent struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 LogSliceType `protobuf:"varint,2,opt,name=type,proto3,enum=v1.LogSliceType" json:"type,omitempty"`
	Payload              string       `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogSliceEvent) Reset()         { *m = LogSliceEvent{} }
func (m *LogSliceEvent) String() string { return proto.CompactTextString(m) }
func (*LogSliceEvent) ProtoMessage()    {}
func (*LogSliceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{21}
}

func (m *LogSliceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogSliceEvent.Unmarshal(m, b)
}
func (m *LogSliceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogSliceEvent.Marshal(b, m, deterministic)
}
func (m *LogSliceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogSliceEvent.Merge(m, src)
}
func (m *LogSliceEvent) XXX_Size() int {
	return xxx_messageInfo_LogSliceEvent.Size(m)
}
func (m *LogSliceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_LogSliceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_LogSliceEvent proto.InternalMessageInfo

func (m *LogSliceEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogSliceEvent) GetType() LogSliceType {
	if m != nil {
		return m.Type
	}
	return LogSliceType_SLICE_ABANDONED
}

func (m *LogSliceEvent) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type StopJobRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopJobRequest) Reset()         { *m = StopJobRequest{} }
func (m *StopJobRequest) String() string { return proto.CompactTextString(m) }
func (*StopJobRequest) ProtoMessage()    {}
func (*StopJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{22}
}

func (m *StopJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopJobRequest.Unmarshal(m, b)
}
func (m *StopJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopJobRequest.Marshal(b, m, deterministic)
}
func (m *StopJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopJobRequest.Merge(m, src)
}
func (m *StopJobRequest) XXX_Size() int {
	return xxx_messageInfo_StopJobRequest.Size(m)
}
func (m *StopJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopJobRequest proto.InternalMessageInfo

func (m *StopJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StopJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopJobResponse) Reset()         { *m = StopJobResponse{} }
func (m *StopJobResponse) String() string { return proto.CompactTextString(m) }
func (*StopJobResponse) ProtoMessage()    {}
func (*StopJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fe744feedd6d332, []int{23}
}

func (m *StopJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopJobResponse.Unmarshal(m, b)
}
func (m *StopJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopJobResponse.Marshal(b, m, deterministic)
}
func (m *StopJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopJobResponse.Merge(m, src)
}
func (m *StopJobResponse) XXX_Size() int {
	return xxx_messageInfo_StopJobResponse.Size(m)
}
func (m *StopJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopJobResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("v1.FilterOp", FilterOp_name, FilterOp_value)
	proto.RegisterEnum("v1.ListenRequestLogs", ListenRequestLogs_name, ListenRequestLogs_value)
	proto.RegisterEnum("v1.JobTrigger", JobTrigger_name, JobTrigger_value)
	proto.RegisterEnum("v1.JobPhase", JobPhase_name, JobPhase_value)
	proto.RegisterEnum("v1.LogSliceType", LogSliceType_name, LogSliceType_value)
	proto.RegisterType((*StartLocalJobRequest)(nil), "v1.StartLocalJobRequest")
	proto.RegisterType((*StartJobResponse)(nil), "v1.StartJobResponse")
	proto.RegisterType((*StartGitHubJobRequest)(nil), "v1.StartGitHubJobRequest")
	proto.RegisterType((*StartFromPreviousJobRequest)(nil), "v1.StartFromPreviousJobRequest")
	proto.RegisterType((*ListJobsRequest)(nil), "v1.ListJobsRequest")
	proto.RegisterType((*FilterExpression)(nil), "v1.FilterExpression")
	proto.RegisterType((*FilterTerm)(nil), "v1.FilterTerm")
	proto.RegisterType((*OrderExpression)(nil), "v1.OrderExpression")
	proto.RegisterType((*ListJobsResponse)(nil), "v1.ListJobsResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "v1.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "v1.SubscribeResponse")
	proto.RegisterType((*GetJobRequest)(nil), "v1.GetJobRequest")
	proto.RegisterType((*GetJobResponse)(nil), "v1.GetJobResponse")
	proto.RegisterType((*ListenRequest)(nil), "v1.ListenRequest")
	proto.RegisterType((*ListenResponse)(nil), "v1.ListenResponse")
	proto.RegisterType((*JobStatus)(nil), "v1.JobStatus")
	proto.RegisterType((*JobMetadata)(nil), "v1.JobMetadata")
	proto.RegisterType((*Repository)(nil), "v1.Repository")
	proto.RegisterType((*Annotation)(nil), "v1.Annotation")
	proto.RegisterType((*JobConditions)(nil), "v1.JobConditions")
	proto.RegisterType((*JobResult)(nil), "v1.JobResult")
	proto.RegisterType((*LogSliceEvent)(nil), "v1.LogSliceEvent")
	proto.RegisterType((*StopJobRequest)(nil), "v1.StopJobRequest")
	proto.RegisterType((*StopJobResponse)(nil), "v1.StopJobResponse")
}

func init() { proto.RegisterFile("werft.proto", fileDescriptor_9fe744feedd6d332) }

var fileDescriptor_9fe744feedd6d332 = []byte{
	// 1589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x6d, 0x73, 0xdb, 0xc6,
	0x11, 0x26, 0x48, 0x91, 0x22, 0x97, 0xa4, 0x04, 0x9d, 0xe4, 0x0e, 0xa3, 0xb4, 0x13, 0x19, 0x71,
	0x26, 0x8a, 0xda, 0x2a, 0xb1, 0xe2, 0x69, 0xda, 0x4e, 0x3f, 0x94, 0x96, 0x60, 0x51, 0x2e, 0x4d,
	0xb2, 0x07, 0xb0, 0x6e, 0x67, 0x3a, 0xc3, 0x39, 0x82, 0x47, 0x12, 0x36, 0x88, 0x43, 0x81, 0xa3,
	0x1c, 0xcd, 0xe4, 0x17, 0xf4, 0x07, 0xf4, 0x5b, 0xfe, 0x5e, 0xfb, 0x2f, 0x3a, 0x9d, 0x7b, 0xc1,
	0x0b, 0x29, 0xd9, 0x9e, 0xe6, 0x1b, 0xf6, 0xb9, 0xbd, 0x7d, 0x79, 0x6e, 0x77, 0xef, 0x00, 0xcd,
	0x77, 0x34, 0x9e, 0xf3, 0xf3, 0x28, 0x66, 0x9c, 0xa1, 0xf2, 0xed, 0xd3, 0xe3, 0xcf, 0x16, 0x8c,
	0x2d, 0x02, 0xfa, 0xb5, 0x44, 0xa6, 0xeb, 0xf9, 0xd7, 0xdc, 0x5f, 0xd1, 0x84, 0x93, 0x55, 0xa4,
	0x94, 0xac, 0xff, 0x18, 0x70, 0xe4, 0x70, 0x12, 0xf3, 0x3e, 0xf3, 0x48, 0xf0, 0x92, 0x4d, 0x31,
	0xfd, 0xc7, 0x9a, 0x26, 0x1c, 0xfd, 0x1a, 0xea, 0x2b, 0xca, 0xc9, 0x8c, 0x70, 0xd2, 0x31, 0x4e,
	0x8c, 0xd3, 0xe6, 0xc5, 0xfe, 0xf9, 0xed, 0xd3, 0xf3, 0x97, 0x6c, 0xfa, 0x4a, 0xc3, 0xbd, 0x12,
	0xce, 0x54, 0xd0, 0x63, 0x68, 0x7a, 0x2c, 0x9c, 0xfb, 0x8b, 0xc9, 0x1d, 0x59, 0x05, 0x9d, 0xf2,
	0x89, 0x71, 0xda, 0xea, 0x95, 0x30, 0x28, 0xf0, 0x6f, 0x64, 0x15, 0xa0, 0x4f, 0xa1, 0xfe, 0x86,
	0x4d, 0xd5, 0x7a, 0x45, 0xaf, 0xef, 0xbe, 0x61, 0x53, 0xb9, 0xf8, 0x05, 0xb4, 0xdf, 0xb1, 0xf8,
	0x6d, 0x12, 0x11, 0x8f, 0x4e, 0x38, 0x89, 0x3b, 0x3b, 0x5a, 0xa3, 0x95, 0xc1, 0x2e, 0x89, 0xd1,
	0x39, 0xa0, 0x0d, 0xb5, 0xc9, 0x8c, 0x85, 0xb4, 0x53, 0x3d, 0x31, 0x4e, 0xeb, 0xbd, 0x12, 0x36,
	0x8b, 0xba, 0x57, 0x2c, 0xa4, 0xcf, 0x1b, 0xb0, 0xeb, 0xb1, 0x90, 0xd3, 0x90, 0x5b, 0xbf, 0x03,
	0x53, 0x26, 0x2a, 0x73, 0x4c, 0x22, 0x16, 0x26, 0x14, 0x7d, 0x01, 0xb5, 0x84, 0x13, 0xbe, 0x4e,
	0x74, 0x8a, 0x6d, 0x9d, 0xa2, 0x23, 0x41, 0xac, 0x17, 0xad, 0x1f, 0x0d, 0x78, 0x24, 0xf7, 0x5e,
	0xfb, 0xbc, 0xb7, 0x9e, 0x16, 0x58, 0xfa, 0xe5, 0x47, 0x59, 0x2a, 0x70, 0xf4, 0x89, 0x22, 0x20,
	0x22, 0x7c, 0x29, 0x09, 0x6a, 0xc8, 0xf4, 0x47, 0x84, 0x2f, 0xd3, 0xa5, 0x9c, 0x9b, 0x9c, 0x99,
	0xc7, 0xd0, 0x5a, 0xf8, 0x7c, 0xb9, 0x9e, 0x4e, 0x38, 0x7b, 0x4b, 0x43, 0x49, 0x4c, 0x03, 0x37,
	0x15, 0xe6, 0x0a, 0xc8, 0xf2, 0xe0, 0x53, 0x19, 0xde, 0x8b, 0x98, 0xad, 0x46, 0x31, 0xbd, 0xf5,
	0xd9, 0x3a, 0x29, 0x04, 0xf9, 0x18, 0x5a, 0x91, 0x46, 0x27, 0x6f, 0xd8, 0x54, 0x06, 0xda, 0xc0,
	0xcd, 0x28, 0xd7, 0xbc, 0xe7, 0xa4, 0x7c, 0xdf, 0xc9, 0xbf, 0x0c, 0xd8, 0xef, 0xfb, 0x89, 0xe0,
	0x2f, 0x49, 0x2d, 0xff, 0x0a, 0x6a, 0x73, 0x3f, 0xe0, 0x34, 0xee, 0x18, 0x27, 0x95, 0xd3, 0xe6,
	0xc5, 0x91, 0x48, 0xfe, 0x85, 0x44, 0xec, 0xef, 0xa3, 0x98, 0x26, 0x89, 0xcf, 0x42, 0xac, 0x75,
	0xd0, 0x57, 0x50, 0x65, 0xf1, 0x8c, 0xc6, 0x9d, 0xb2, 0x54, 0x3e, 0x14, 0xca, 0x43, 0x01, 0x14,
	0x74, 0x95, 0x06, 0x3a, 0x82, 0x6a, 0x22, 0x32, 0x92, 0x64, 0x54, 0xb1, 0x12, 0x04, 0x1a, 0xf8,
	0x2b, 0x9f, 0x4b, 0x0e, 0xaa, 0x58, 0x09, 0xd6, 0x6f, 0xc1, 0xdc, 0x76, 0x89, 0x9e, 0x40, 0x95,
	0xd3, 0x78, 0x95, 0xe8, 0xb8, 0xf6, 0xf2, 0xb8, 0x5c, 0x1a, 0xaf, 0xb0, 0x5a, 0xb4, 0x7e, 0x00,
	0xc8, 0x41, 0x61, 0x7d, 0xee, 0xd3, 0x60, 0xa6, 0xf9, 0x51, 0x82, 0x40, 0x6f, 0x49, 0xb0, 0xa6,
	0x9a, 0x12, 0x25, 0xa0, 0x33, 0x68, 0xb0, 0x88, 0xc6, 0x84, 0xfb, 0x2c, 0x94, 0x31, 0xee, 0x5d,
	0xb4, 0x72, 0x1f, 0xc3, 0x08, 0xe7, 0xcb, 0xe8, 0x67, 0x50, 0x0b, 0xe9, 0x82, 0x70, 0x2a, 0xc3,
	0xae, 0x63, 0x2d, 0x59, 0x36, 0xec, 0x6f, 0x65, 0xff, 0x9e, 0x10, 0x7e, 0x0e, 0x0d, 0x92, 0x78,
	0x34, 0x9c, 0xf9, 0xe1, 0x42, 0x86, 0x51, 0xc7, 0x39, 0x60, 0x0d, 0xc1, 0xcc, 0x8f, 0x45, 0xd7,
	0xf5, 0x11, 0x54, 0x39, 0xe3, 0x24, 0x90, 0x76, 0xaa, 0x58, 0x09, 0xa2, 0xda, 0x63, 0x9a, 0xac,
	0x03, 0xae, 0x0f, 0x60, 0xbb, 0xda, 0xd5, 0xa2, 0xf5, 0x47, 0x30, 0x9d, 0xf5, 0x34, 0xf1, 0x62,
	0x7f, 0x4a, 0x7f, 0xd2, 0x41, 0x5b, 0xbf, 0x87, 0x83, 0x82, 0x85, 0xbc, 0xd7, 0xb4, 0xf7, 0x87,
	0x7b, 0x4d, 0x7b, 0xff, 0x1c, 0xda, 0xd7, 0x94, 0x17, 0xaa, 0x17, 0xc1, 0x4e, 0x48, 0x56, 0x54,
	0x53, 0x22, 0xbf, 0xad, 0xef, 0x60, 0x2f, 0x55, 0xfa, 0xff, 0xac, 0x2f, 0xa1, 0x2d, 0xc8, 0xa2,
	0xe1, 0x07, 0xac, 0xa3, 0x0e, 0xec, 0xae, 0xa3, 0x19, 0xe1, 0x34, 0xd1, 0x6c, 0xa7, 0x22, 0xfa,
	0x0a, 0x76, 0x02, 0xb6, 0x48, 0xf4, 0x89, 0x3f, 0x12, 0x3e, 0x36, 0xcc, 0xf5, 0xd9, 0x22, 0xc1,
	0x52, 0xc5, 0x62, 0xb0, 0x97, 0x2e, 0xe9, 0x10, 0xbf, 0x84, 0x9a, 0xb2, 0xf3, 0x60, 0x88, 0xbd,
	0x12, 0xd6, 0xcb, 0xa2, 0x4f, 0x92, 0xc0, 0xf7, 0x54, 0xc9, 0x35, 0x2f, 0x0e, 0xa4, 0x1b, 0xb6,
	0x70, 0x04, 0x66, 0xdf, 0xd2, 0x90, 0xf7, 0x4a, 0x58, 0x69, 0x14, 0xe7, 0xdb, 0xbf, 0x0d, 0x68,
	0x64, 0xd6, 0x1e, 0xcc, 0xab, 0x38, 0xac, 0xca, 0x1f, 0x1b, 0x56, 0x16, 0x54, 0xa3, 0x25, 0x49,
	0x68, 0xb1, 0xba, 0x5f, 0xb2, 0xe9, 0x48, 0x60, 0x58, 0x2d, 0xa1, 0xa7, 0x20, 0xe6, 0xfb, 0xcc,
	0x17, 0x65, 0x9e, 0xc8, 0xea, 0xd6, 0xd1, 0xbe, 0x64, 0xd3, 0xcb, 0x6c, 0x01, 0x17, 0x94, 0x04,
	0xb7, 0x33, 0xca, 0x89, 0x1f, 0x24, 0x72, 0x6a, 0x37, 0x70, 0x2a, 0xa2, 0x2f, 0x61, 0x57, 0x1d,
	0x52, 0xd2, 0xa9, 0x6d, 0x94, 0x27, 0x96, 0x28, 0x4e, 0x57, 0xad, 0x1f, 0xcb, 0xd0, 0x2c, 0xc4,
	0x2c, 0x8a, 0x9d, 0xbd, 0x0b, 0x65, 0x69, 0xca, 0xa6, 0x91, 0x02, 0x3a, 0x07, 0x88, 0x69, 0xc4,
	0x12, 0x9f, 0xb3, 0xf8, 0x4e, 0xa7, 0x2b, 0xc7, 0x00, 0xce, 0x50, 0x5c, 0xd0, 0x40, 0xa7, 0xb0,
	0xcb, 0x63, 0x7f, 0xb1, 0xa0, 0xb1, 0xce, 0x78, 0x4f, 0xbb, 0x77, 0x15, 0x8a, 0xd3, 0x65, 0xf4,
	0x0c, 0x76, 0xbd, 0x98, 0x12, 0x4e, 0x67, 0x3a, 0xe5, 0xe3, 0x73, 0x75, 0xcb, 0x9e, 0xa7, 0xb7,
	0xec, 0xb9, 0x9b, 0xde, 0xb2, 0x38, 0x55, 0x45, 0xbf, 0x81, 0xfa, 0xdc, 0x0f, 0xfd, 0x64, 0x49,
	0x67, 0x32, 0xf3, 0x0f, 0x6f, 0xcb, 0x74, 0xd1, 0x37, 0xd0, 0x24, 0x61, 0xc8, 0x38, 0x51, 0x24,
	0xd7, 0xf2, 0x79, 0xd6, 0xcd, 0x60, 0x5c, 0x54, 0xb1, 0xbe, 0x07, 0xc8, 0x73, 0x14, 0x85, 0xb0,
	0x64, 0x09, 0x4f, 0x0b, 0x41, 0x7c, 0xe7, 0x8c, 0x95, 0x8b, 0x8c, 0x21, 0xd8, 0x11, 0x7c, 0xc8,
	0xf4, 0x1b, 0x58, 0x7e, 0x23, 0x13, 0x2a, 0x31, 0x9d, 0xeb, 0x3b, 0x47, 0x7c, 0xa2, 0x63, 0xa8,
	0x8b, 0x7b, 0x43, 0xf4, 0xbb, 0x3e, 0xc1, 0x4c, 0xb6, 0x9e, 0x01, 0xe4, 0x41, 0x89, 0xbd, 0x6f,
	0xe9, 0x9d, 0x76, 0x2c, 0x3e, 0x1f, 0x9e, 0xa5, 0xd6, 0x0a, 0xda, 0x1b, 0xf5, 0x22, 0x6a, 0x24,
	0x59, 0x7b, 0x1e, 0x4d, 0xd4, 0xb5, 0x5c, 0xc7, 0xa9, 0x88, 0x3e, 0x87, 0xf6, 0x9c, 0xf8, 0xc1,
	0x3a, 0xa6, 0x13, 0x8f, 0xad, 0x43, 0x2e, 0x0d, 0x55, 0x71, 0x4b, 0x83, 0x97, 0x02, 0x43, 0xbf,
	0x00, 0xf0, 0x48, 0x38, 0x89, 0x69, 0x14, 0x90, 0x3b, 0x99, 0x4d, 0x1d, 0x37, 0x3c, 0x12, 0x62,
	0x09, 0x58, 0xef, 0x64, 0x9b, 0xa8, 0xa2, 0x12, 0x39, 0xf3, 0xbb, 0x28, 0x6b, 0x13, 0xf1, 0x2d,
	0xdc, 0x47, 0xe4, 0x2e, 0x60, 0x64, 0x96, 0xde, 0xd2, 0x5a, 0x44, 0x27, 0xd0, 0x9c, 0x51, 0x31,
	0xd6, 0xa2, 0x6c, 0xee, 0x37, 0x70, 0x11, 0x12, 0xec, 0x78, 0x4b, 0x12, 0x86, 0x34, 0x10, 0xfd,
	0x50, 0x11, 0xec, 0xa4, 0xb2, 0xe5, 0x41, 0x7b, 0xa3, 0x8b, 0x1f, 0xec, 0xd1, 0x27, 0x3a, 0xa0,
	0xb2, 0xac, 0x41, 0xb3, 0xd8, 0xfa, 0xee, 0x5d, 0x44, 0xef, 0x87, 0x58, 0xd9, 0x08, 0xd1, 0x7a,
	0x02, 0x7b, 0x0e, 0x67, 0xd1, 0x47, 0xe6, 0xe7, 0x01, 0xec, 0x67, 0x5a, 0x6a, 0x3a, 0x9d, 0x4d,
	0xa0, 0x9e, 0x5e, 0x5e, 0xa8, 0x0d, 0x8d, 0xe1, 0x68, 0x62, 0xff, 0x79, 0xdc, 0xed, 0x3b, 0x66,
	0x09, 0x21, 0xd8, 0x1b, 0x8e, 0x26, 0x8e, 0xdb, 0xc5, 0xae, 0x33, 0x79, 0x7d, 0xe3, 0xf6, 0x4c,
	0x03, 0x99, 0xd0, 0x12, 0x2a, 0x83, 0x2b, 0x8d, 0x94, 0xd1, 0x3e, 0x34, 0x87, 0xa3, 0xc9, 0xe5,
	0x70, 0xe0, 0x76, 0x6f, 0x06, 0x8e, 0x59, 0x49, 0xad, 0xfc, 0xf5, 0xc6, 0x71, 0x1d, 0x73, 0xe7,
	0xec, 0x2f, 0x70, 0x70, 0x6f, 0x56, 0xa2, 0x03, 0x68, 0xf7, 0x87, 0xd7, 0xce, 0xe4, 0xea, 0xc6,
	0xe9, 0x3e, 0xef, 0xdb, 0x57, 0x66, 0x29, 0x83, 0xc6, 0x03, 0xa7, 0x7f, 0x73, 0x69, 0x5f, 0x99,
	0x06, 0x6a, 0x41, 0x5d, 0x42, 0xb8, 0xfb, 0xda, 0x2c, 0x0b, 0xbb, 0x52, 0xea, 0xb9, 0xaf, 0xfa,
	0x66, 0xe5, 0xec, 0xef, 0x00, 0x79, 0x97, 0xa2, 0x43, 0xd8, 0x77, 0xf1, 0xcd, 0xf5, 0xb5, 0x8d,
	0x27, 0xe3, 0xc1, 0x9f, 0x06, 0xc3, 0xd7, 0x03, 0x95, 0x40, 0x0a, 0xbe, 0xea, 0x0e, 0xc6, 0xdd,
	0xbe, 0x4a, 0x20, 0xc5, 0x46, 0x63, 0x47, 0x24, 0x50, 0xd8, 0x7a, 0x65, 0xf7, 0x6d, 0xd7, 0xbe,
	0x32, 0x2b, 0x67, 0x3f, 0x40, 0x3d, 0x9d, 0x7a, 0x22, 0xb2, 0x51, 0xaf, 0xeb, 0xd8, 0x05, 0xcb,
	0x87, 0xb0, 0xaf, 0xa0, 0x11, 0xb6, 0x47, 0x5d, 0x7c, 0x33, 0xb8, 0x36, 0x0d, 0xe1, 0x4e, 0x81,
	0x92, 0x32, 0x81, 0x95, 0xf3, 0xbd, 0x78, 0x3c, 0x18, 0x08, 0xa8, 0x82, 0xf6, 0x00, 0x14, 0x74,
	0x35, 0x1c, 0xd8, 0xe6, 0x4e, 0xae, 0x72, 0xd9, 0xb7, 0xbb, 0x83, 0xf1, 0xc8, 0xac, 0x9e, 0xfd,
	0xd3, 0x80, 0x56, 0xf1, 0xf8, 0x85, 0x3f, 0xc9, 0xca, 0xa4, 0xfb, 0xbc, 0x3b, 0x10, 0xfb, 0x04,
	0x63, 0xfb, 0xd0, 0x54, 0xa0, 0xdc, 0x6e, 0x1a, 0x39, 0x20, 0x03, 0x50, 0xde, 0x15, 0x20, 0x8e,
	0xc7, 0x1e, 0xb8, 0xca, 0xbb, 0x82, 0xb4, 0xf7, 0x4c, 0x7e, 0xd1, 0xbd, 0xe9, 0x9b, 0x55, 0xc1,
	0x8f, 0x92, 0xb1, 0xed, 0x8c, 0xfb, 0xae, 0x59, 0xbb, 0xf8, 0x6f, 0x05, 0x5a, 0xaf, 0xc5, 0xff,
	0x85, 0x43, 0xe3, 0x5b, 0xdf, 0xa3, 0xe8, 0x12, 0xda, 0x1b, 0xbf, 0x0e, 0xa8, 0x23, 0xca, 0xf5,
	0xa1, 0xbf, 0x89, 0xe3, 0xa3, 0x6c, 0xa5, 0x50, 0x73, 0x56, 0xe9, 0xd4, 0x40, 0x97, 0xa2, 0x60,
	0x8b, 0x4f, 0x6b, 0xf4, 0x49, 0xa6, 0xbb, 0xfd, 0xdc, 0x7e, 0x9f, 0x19, 0x34, 0xd4, 0x3f, 0x31,
	0x5b, 0x0f, 0x60, 0xf4, 0x59, 0xa6, 0xff, 0xf0, 0xd3, 0xf8, 0xbd, 0x06, 0xbf, 0x83, 0x7a, 0xfa,
	0xa8, 0x42, 0x87, 0xe9, 0x35, 0x5f, 0x78, 0xf9, 0xaa, 0x8d, 0xdb, 0xef, 0x2e, 0xab, 0x84, 0xfe,
	0x00, 0x8d, 0xec, 0xe9, 0x83, 0x94, 0xf5, 0xad, 0xb7, 0xd4, 0xf1, 0xa3, 0x2d, 0x34, 0xdd, 0xfb,
	0x8d, 0x81, 0x9e, 0x42, 0x4d, 0xbd, 0x6b, 0x90, 0xbc, 0x46, 0x37, 0x1e, 0x42, 0xc7, 0xa8, 0x08,
	0x65, 0x0e, 0xbf, 0x85, 0x9a, 0x6a, 0x2b, 0xb5, 0x65, 0xa3, 0xc5, 0xd4, 0x96, 0xcd, 0x67, 0x88,
	0xf4, 0xf3, 0x0c, 0x76, 0x75, 0xff, 0x23, 0xa4, 0x18, 0x28, 0x8e, 0x8c, 0xe3, 0xc3, 0x0d, 0x2c,
	0xdd, 0x37, 0xad, 0xc9, 0x8b, 0xea, 0xdb, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xda, 0x4c, 0x21,
	0x51, 0x66, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WerftServiceClient is the client API for WerftService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WerftServiceClient interface {
	// StartLocalJob starts a job by uploading the workspace content directly. The incoming requests are expected in the following order:
	//   1. metadata
	//   2. all bytes constituting the werft/config.yaml
	//   3. all bytes constituting the job YAML that will be executed (that the config.yaml points to)
	//   4. all bytes constituting the gzipped workspace tar stream
	//   5. the workspace tar stream done marker
	StartLocalJob(ctx context.Context, opts ...grpc.CallOption) (WerftService_StartLocalJobClient, error)
	// StartGitHubJob starts a job on a Git context, possibly with a custom job.
	StartGitHubJob(ctx context.Context, in *StartGitHubJobRequest, opts ...grpc.CallOption) (*StartJobResponse, error)
	// StartFromPreviousJob starts a new job based on a previous one.
	// If the previous job does not have the can-replay condition set this call will result in an error.
	StartFromPreviousJob(ctx context.Context, in *StartFromPreviousJobRequest, opts ...grpc.CallOption) (*StartJobResponse, error)
	// Searches for jobs known to this instance
	ListJobs(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	// Subscribe listens to new jobs/job updates
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (WerftService_SubscribeClient, error)
	// GetJob retrieves details of a single job
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error)
	// Listen listens to job updates and log output of a running job
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (WerftService_ListenClient, error)
	// StopJob stops a currently running job
	StopJob(ctx context.Context, in *StopJobRequest, opts ...grpc.CallOption) (*StopJobResponse, error)
}

type werftServiceClient struct {
	cc *grpc.ClientConn
}

func NewWerftServiceClient(cc *grpc.ClientConn) WerftServiceClient {
	return &werftServiceClient{cc}
}

func (c *werftServiceClient) StartLocalJob(ctx context.Context, opts ...grpc.CallOption) (WerftService_StartLocalJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WerftService_serviceDesc.Streams[0], "/v1.WerftService/StartLocalJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &werftServiceStartLocalJobClient{stream}
	return x, nil
}

type WerftService_StartLocalJobClient interface {
	Send(*StartLocalJobRequest) error
	CloseAndRecv() (*StartJobResponse, error)
	grpc.ClientStream
}

type werftServiceStartLocalJobClient struct {
	grpc.ClientStream
}

func (x *werftServiceStartLocalJobClient) Send(m *StartLocalJobRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *werftServiceStartLocalJobClient) CloseAndRecv() (*StartJobResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StartJobResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *werftServiceClient) StartGitHubJob(ctx context.Context, in *StartGitHubJobRequest, opts ...grpc.CallOption) (*StartJobResponse, error) {
	out := new(StartJobResponse)
	err := c.cc.Invoke(ctx, "/v1.WerftService/StartGitHubJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *werftServiceClient) StartFromPreviousJob(ctx context.Context, in *StartFromPreviousJobRequest, opts ...grpc.CallOption) (*StartJobResponse, error) {
	out := new(StartJobResponse)
	err := c.cc.Invoke(ctx, "/v1.WerftService/StartFromPreviousJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *werftServiceClient) ListJobs(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/v1.WerftService/ListJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *werftServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (WerftService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WerftService_serviceDesc.Streams[1], "/v1.WerftService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &werftServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WerftService_SubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type werftServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *werftServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *werftServiceClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error) {
	out := new(GetJobResponse)
	err := c.cc.Invoke(ctx, "/v1.WerftService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *werftServiceClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (WerftService_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WerftService_serviceDesc.Streams[2], "/v1.WerftService/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &werftServiceListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WerftService_ListenClient interface {
	Recv() (*ListenResponse, error)
	grpc.ClientStream
}

type werftServiceListenClient struct {
	grpc.ClientStream
}

func (x *werftServiceListenClient) Recv() (*ListenResponse, error) {
	m := new(ListenResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *werftServiceClient) StopJob(ctx context.Context, in *StopJobRequest, opts ...grpc.CallOption) (*StopJobResponse, error) {
	out := new(StopJobResponse)
	err := c.cc.Invoke(ctx, "/v1.WerftService/StopJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WerftServiceServer is the server API for WerftService service.
type WerftServiceServer interface {
	// StartLocalJob starts a job by uploading the workspace content directly. The incoming requests are expected in the following order:
	//   1. metadata
	//   2. all bytes constituting the werft/config.yaml
	//   3. all bytes constituting the job YAML that will be executed (that the config.yaml points to)
	//   4. all bytes constituting the gzipped workspace tar stream
	//   5. the workspace tar stream done marker
	StartLocalJob(WerftService_StartLocalJobServer) error
	// StartGitHubJob starts a job on a Git context, possibly with a custom job.
	StartGitHubJob(context.Context, *StartGitHubJobRequest) (*StartJobResponse, error)
	// StartFromPreviousJob starts a new job based on a previous one.
	// If the previous job does not have the can-replay condition set this call will result in an error.
	StartFromPreviousJob(context.Context, *StartFromPreviousJobRequest) (*StartJobResponse, error)
	// Searches for jobs known to this instance
	ListJobs(context.Context, *ListJobsRequest) (*ListJobsResponse, error)
	// Subscribe listens to new jobs/job updates
	Subscribe(*SubscribeRequest, WerftService_SubscribeServer) error
	// GetJob retrieves details of a single job
	GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error)
	// Listen listens to job updates and log output of a running job
	Listen(*ListenRequest, WerftService_ListenServer) error
	// StopJob stops a currently running job
	StopJob(context.Context, *StopJobRequest) (*StopJobResponse, error)
}

// UnimplementedWerftServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWerftServiceServer struct {
}

func (*UnimplementedWerftServiceServer) StartLocalJob(srv WerftService_StartLocalJobServer) error {
	return status.Errorf(codes.Unimplemented, "method StartLocalJob not implemented")
}
func (*UnimplementedWerftServiceServer) StartGitHubJob(ctx context.Context, req *StartGitHubJobRequest) (*StartJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartGitHubJob not implemented")
}
func (*UnimplementedWerftServiceServer) StartFromPreviousJob(ctx context.Context, req *StartFromPreviousJobRequest) (*StartJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartFromPreviousJob not implemented")
}
func (*UnimplementedWerftServiceServer) ListJobs(ctx context.Context, req *ListJobsRequest) (*ListJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobs not implemented")
}
func (*UnimplementedWerftServiceServer) Subscribe(req *SubscribeRequest, srv WerftService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedWerftServiceServer) GetJob(ctx context.Context, req *GetJobRequest) (*GetJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedWerftServiceServer) Listen(req *ListenRequest, srv WerftService_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}
func (*UnimplementedWerftServiceServer) StopJob(ctx context.Context, req *StopJobRequest) (*StopJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopJob not implemented")
}

func RegisterWerftServiceServer(s *grpc.Server, srv WerftServiceServer) {
	s.RegisterService(&_WerftService_serviceDesc, srv)
}

func _WerftService_StartLocalJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WerftServiceServer).StartLocalJob(&werftServiceStartLocalJobServer{stream})
}

type WerftService_StartLocalJobServer interface {
	SendAndClose(*StartJobResponse) error
	Recv() (*StartLocalJobRequest, error)
	grpc.ServerStream
}

type werftServiceStartLocalJobServer struct {
	grpc.ServerStream
}

func (x *werftServiceStartLocalJobServer) SendAndClose(m *StartJobResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *werftServiceStartLocalJobServer) Recv() (*StartLocalJobRequest, error) {
	m := new(StartLocalJobRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _WerftService_StartGitHubJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartGitHubJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WerftServiceServer).StartGitHubJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.WerftService/StartGitHubJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WerftServiceServer).StartGitHubJob(ctx, req.(*StartGitHubJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WerftService_StartFromPreviousJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFromPreviousJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WerftServiceServer).StartFromPreviousJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.WerftService/StartFromPreviousJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WerftServiceServer).StartFromPreviousJob(ctx, req.(*StartFromPreviousJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WerftService_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WerftServiceServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.WerftService/ListJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WerftServiceServer).ListJobs(ctx, req.(*ListJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WerftService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WerftServiceServer).Subscribe(m, &werftServiceSubscribeServer{stream})
}

type WerftService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type werftServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *werftServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WerftService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WerftServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.WerftService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WerftServiceServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WerftService_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WerftServiceServer).Listen(m, &werftServiceListenServer{stream})
}

type WerftService_ListenServer interface {
	Send(*ListenResponse) error
	grpc.ServerStream
}

type werftServiceListenServer struct {
	grpc.ServerStream
}

func (x *werftServiceListenServer) Send(m *ListenResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WerftService_StopJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WerftServiceServer).StopJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.WerftService/StopJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WerftServiceServer).StopJob(ctx, req.(*StopJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WerftService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.WerftService",
	HandlerType: (*WerftServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartGitHubJob",
			Handler:    _WerftService_StartGitHubJob_Handler,
		},
		{
			MethodName: "StartFromPreviousJob",
			Handler:    _WerftService_StartFromPreviousJob_Handler,
		},
		{
			MethodName: "ListJobs",
			Handler:    _WerftService_ListJobs_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _WerftService_GetJob_Handler,
		},
		{
			MethodName: "StopJob",
			Handler:    _WerftService_StopJob_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StartLocalJob",
			Handler:       _WerftService_StartLocalJob_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Subscribe",
			Handler:       _WerftService_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Listen",
			Handler:       _WerftService_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "werft.proto",
}
